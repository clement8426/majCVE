{
    "vendor": "apple",
    "product": "c-ares",
    "version": "1.34.2",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "c-ares",
    "version": "1.34.4",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "c-ares",
    "current_version": "1.34.2",
    "new_version": "1.34.4",
    "status": "pas s\u00fbr",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "icu4c@75",
    "version": "75.1",
    "cve_count": 20,
    "cve_details": [
        {
            "id": "OSV:MAL-2025-75",
            "score": 0.0,
            "description": "This package runs commands in a pre-install script that exfils sensitive data to a attacker-controlled domain.\n\n---\n_-= Per source details. Do not edit below this line.=-_\n\n## Source: ghsa-malware (632763242c2df9c72854a919e8fd6a0c7a8b6debedb9c7e22cbd886883c4217b)\nAny computer that has this package installed or running should be considered fully compromised. All secrets and keys stored on that computer should be rotated immediately from a different computer. The package should be removed, but as full control of the computer may have been given to an outside entity, there is no guarantee that removing the package will remove all malicious software resulting from installing it.\n",
            "url": "https://vulners.com/osv/OSV:MAL-2025-75"
        },
        {
            "id": "APPLE:5AF45DC47815ABEE46EF25A46C7D084E",
            "score": 0.0,
            "description": "Apple recommends to install security update tvOS 18.2.1 on devices Apple TV HD and Apple TV 4K (all models)",
            "url": "https://vulners.com/apple/APPLE:5AF45DC47815ABEE46EF25A46C7D084E"
        },
        {
            "id": "APPLE:7A0F39796936B0FD4B519C79D4E1E6F9",
            "score": 0.0,
            "description": "Apple recommends to install security update iOS 18.2.1 and iPadOS 18.2.1 on devices iPhone XS and later, iPad Pro 13-inch, iPad Pro 12.9-inch 3rd generation and later, iPad Pro 11-inch 1st generation and later, iPad Air 3rd generation and later, iPad 7th generation and later, and iPad mini 5th generation and later",
            "url": "https://vulners.com/apple/APPLE:7A0F39796936B0FD4B519C79D4E1E6F9"
        },
        {
            "id": "APPLE:75B6C5A873B17469F7395EA4A49F8377",
            "score": 9.8,
            "description": "# About the security content of Safari 18.2\n\nThis document describes the security content of Safari 18.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## Safari 18.2\n\n### Safari\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: On a device with Private Relay enabled, adding a website to the Safari Reading List may reveal the originating IP address to the website\n\nDescription: The issue was addressed with improved routing of Safari-originated requests.\n\nCVE-2024-44246: Jacob Braun\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### Safari\n\nWe would like to acknowledge Jaydev Ahire for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:75B6C5A873B17469F7395EA4A49F8377"
        },
        {
            "id": "APPLE:8873DE6FD5D82D881C63B24C69107420",
            "score": 9.8,
            "description": "# About the security content of visionOS 2.2\n\nThis document describes the security content of visionOS 2.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## visionOS 2.2\n\n### Crash Reporter\n\nAvailable for: Apple Vision Pro\n\nImpact: An app may be able to access sensitive user data\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-54513: an anonymous researcher\n\n### FontParser\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### ImageIO\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### Kernel\n\nAvailable for: Apple Vision Pro\n\nImpact: An app may be able to cause unexpected system termination or corrupt kernel memory\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44245: an anonymous researcher\n\n### Kernel\n\nAvailable for: Apple Vision Pro\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### libexpat\n\nAvailable for: Apple Vision Pro\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### Passwords\n\nAvailable for: Apple Vision Pro\n\nImpact: An attacker in a privileged network position may be able to alter network traffic\n\nDescription: This issue was addressed by using HTTPS when sending information over the network.\n\nCVE-2024-54492: Talal Haj Bakry and Tommy Mysk of Mysk Inc. (@mysk_co)\n\n### SceneKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### FaceTime Foundation\n\nWe would like to acknowledge Joshua Pellecchia for their assistance.\n\n### Photos\n\nWe would like to acknowledge Chi Yuan Chang of ZUSO ART and taikosoup for their assistance.\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n\n### Safari Private Browsing\n\nWe would like to acknowledge Richard Hyunho Im (@richeeta) with Route Zero Security for their assistance.\n\n### Swift\n\nWe would like to acknowledge Marc Schoenefeld, Dr. rer. nat. for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:8873DE6FD5D82D881C63B24C69107420"
        },
        {
            "id": "APPLE:756711F9F7EA5ABAA930579790F34854",
            "score": 9.8,
            "description": "# About the security content of tvOS 18.2\n\nThis document describes the security content of tvOS 18.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## tvOS 18.2\n\n### AppleMobileFileIntegrity\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: A malicious app may be able to access private information\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54526: Mickey Jin (@patch1t), Arsenii Kostromin (0x3c3e)\n\n### AppleMobileFileIntegrity\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to access sensitive user data\n\nDescription: This issue was addressed with improved checks.\n\nCVE-2024-54527: Mickey Jin (@patch1t)\n\n### Crash Reporter\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to access sensitive user data\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-54513: an anonymous researcher\n\n### FontParser\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### ImageIO\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### Kernel\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### Kernel\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to leak sensitive kernel state\n\nDescription: A race condition was addressed with improved locking.\n\nCVE-2024-54510: Joseph Ravichandran (@0xjprx) of MIT CSAIL\n\n### libexpat\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### libxpc\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to break out of its sandbox\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54514: an anonymous researcher\n\n### libxpc\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to gain elevated privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-44225: \u98ce\u6c90\u4e91\u70df(@binary_fmyy)\n\n### SceneKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### FaceTime\n\nWe would like to acknowledge \u6930\u6930 for their assistance.\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n\n### Swift\n\nWe would like to acknowledge Marc Schoenefeld, Dr. rer. nat. for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:756711F9F7EA5ABAA930579790F34854"
        },
        {
            "id": "APPLE:6CD282140CDEAF8489F8B548272C8004",
            "score": 9.8,
            "description": "# About the security content of macOS Sequoia 15.2\n\nThis document describes the security content of macOS Sequoia 15.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## macOS Sequoia 15.2\n\n### Apple Software Restore\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54477: Mickey Jin (@patch1t), Csaba Fitzl (@theevilbit) of Kandji\n\n### AppleGraphicsControl\n\nAvailable for: macOS Sequoia\n\nImpact: Parsing a maliciously crafted video file may lead to unexpected system termination\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44220: D4m0n\n\n### AppleMobileFileIntegrity\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to access private information\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54526: Mickey Jin (@patch1t), Arsenii Kostromin (0x3c3e)\n\n### AppleMobileFileIntegrity\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access sensitive user data\n\nDescription: This issue was addressed with improved checks.\n\nCVE-2024-54527: Mickey Jin (@patch1t)\n\n### AppleMobileFileIntegrity\n\nAvailable for: macOS Sequoia\n\nImpact: A local attacker may gain access to user's Keychain items\n\nDescription: This issue was addressed by enabling hardened runtime.\n\nCVE-2024-54490: Mickey Jin (@patch1t)\n\n### Audio\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to execute arbitrary code with kernel privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-54529: Dillon Franke working with Google Project Zero\n\n### Crash Reporter\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access sensitive user data\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-54513: an anonymous researcher\n\n### Crash Reporter\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access protected user data\n\nDescription: A logic issue was addressed with improved file handling.\n\nCVE-2024-44300: an anonymous researcher\n\n### DiskArbitration\n\nAvailable for: macOS Sequoia\n\nImpact: An encrypted volume may be accessed by a different user without prompting for the password\n\nDescription: An authorization issue was addressed with improved state management.\n\nCVE-2024-54466: Michael Cohen\n\n### Disk Utility\n\nAvailable for: macOS Sequoia\n\nImpact: Running a mount command may unexpectedly execute arbitrary code\n\nDescription: A path handling issue was addressed with improved validation.\n\nCVE-2024-54489: D\u2019Angelo Gonzalez of CrowdStrike\n\n### FontParser\n\nAvailable for: macOS Sequoia\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### Foundation\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to gain root privileges\n\nDescription: A logic issue was addressed with improved file handling.\n\nCVE-2024-44291: Arsenii Kostromin (0x3c3e)\n\n### ImageIO\n\nAvailable for: macOS Sequoia\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### IOMobileFrameBuffer\n\nAvailable for: macOS Sequoia\n\nImpact: An attacker may be able to cause unexpected system termination or arbitrary code execution in DCP firmware\n\nDescription: An out-of-bounds access issue was addressed with improved bounds checking.\n\nCVE-2024-54506: Ye Zhang (@VAR10CK) of Baidu Security\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to leak sensitive kernel state\n\nDescription: A race condition was addressed with improved locking.\n\nCVE-2024-54510: Joseph Ravichandran (@0xjprx) of MIT CSAIL\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to cause unexpected system termination or corrupt kernel memory\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44245: an anonymous researcher\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to bypass kASLR\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-54531: Hyerean Jang, Taehun Kim, and Youngjoo Shin\n\n### LaunchServices\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to elevate privileges\n\nDescription: A logic issue was addressed with improved state management.\n\nCVE-2024-54465: an anonymous researcher\n\n### libexpat\n\nAvailable for: macOS Sequoia\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### libxpc\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to break out of its sandbox\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54514: an anonymous researcher\n\n### libxpc\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to gain elevated privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-44225: \u98ce\u6c90\u4e91\u70df(@binary_fmyy)\n\n### Logging\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious application may be able to determine a user's current location\n\nDescription: The issue was resolved by sanitizing logging\n\nCVE-2024-54491: Kirin (@Pwnrin)\n\n### MediaRemote\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: The issue was resolved by sanitizing logging.\n\nCVE-2024-54484: Meng Zhang (\u9cb8\u843d) of NorthSea\n\n### Notification Center\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: A privacy issue was addressed with improved private data redaction for log entries.\n\nCVE-2024-54504: \u795e\u7f5a(@Pwnrin)\n\n### PackageKit\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54474: Mickey Jin (@patch1t)\n\nCVE-2024-54476: Mickey Jin (@patch1t), Bohdan Stasiuk (@Bohdan_Stasiuk)\n\n### Passwords\n\nAvailable for: macOS Sequoia\n\nImpact: An attacker in a privileged network position may be able to alter network traffic\n\nDescription: This issue was addressed by using HTTPS when sending information over the network.\n\nCVE-2024-54492: Talal Haj Bakry and Tommy Mysk of Mysk Inc. (@mysk_co)\n\n### Perl\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to modify protected parts of the file system\n\nDescription: A logic issue was addressed with improved state management.\n\nCVE-2023-32395: Arsenii Kostromin (0x3c3e)\n\n### Safari\n\nAvailable for: macOS Sequoia\n\nImpact: On a device with Private Relay enabled, adding a website to the Safari Reading List may reveal the originating IP address to the website\n\nDescription: The issue was addressed with improved routing of Safari-originated requests.\n\nCVE-2024-44246: Jacob Braun\n\n### SceneKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to gain root privileges\n\nDescription: A logic issue was addressed with improved restrictions.\n\nCVE-2024-54515: an anonymous researcher\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to overwrite arbitrary files\n\nDescription: A logic issue was addressed with improved restrictions.\n\nCVE-2024-54528: an anonymous researcher\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to access arbitrary files\n\nDescription: A logic issue was addressed with improved file handling.\n\nCVE-2024-54524: an anonymous researcher\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to break out of its sandbox\n\nDescription: A path handling issue was addressed with improved validation.\n\nCVE-2024-54498: an anonymous researcher\n\n### Shortcuts\n\nAvailable for: macOS Sequoia\n\nImpact: Privacy indicators for microphone access may be attributed incorrectly\n\nDescription: This issue was addressed through improved state management.\n\nCVE-2024-54493: Yokesh Muthu K\n\n### StorageKit\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to modify protected parts of the file system\n\nDescription: A configuration issue was addressed with additional restrictions.\n\nCVE-2024-44243: Mickey Jin (@patch1t), Jonathan Bar Or (@yo_yo_yo_jbo) of Microsoft\n\n### StorageKit\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to gain root privileges\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-44224: Amy (@asentientbot)\n\n### Swift\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to modify protected parts of the file system\n\nDescription: The issue was addressed with improved permissions logic.\n\nCVE-2024-54495: Claudio Bozzato and Francesco Benvenuto of Cisco Talos, Arsenii Kostromin (0x3c3e)\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### ATS\n\nWe would like to acknowledge Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative for their assistance.\n\n### CUPS\n\nWe would like to acknowledge evilsocket for their assistance.\n\n### FaceTime\n\nWe would like to acknowledge \u6930\u6930 for their assistance.\n\n### FaceTime Foundation\n\nWe would like to acknowledge Joshua Pellecchia for their assistance.\n\n### Kernel\n\nWe would like to acknowledge Zweig of Kunlun Lab for their assistance.\n\n### NSOpenPanel\n\nWe would like to acknowledge Shaheen Fazim for their assistance.\n\n### Photos\n\nWe would like to acknowledge Chi Yuan Chang of ZUSO ART and taikosoup for their assistance.\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n\n### Safari\n\nWe would like to acknowledge Jaydev Ahire for their assistance.\n\n### Safari Private Browsing\n\nWe would like to acknowledge Richard Hyunho Im (@richeeta) with Route Zero Security for their assistance.\n\n### Sandbox\n\nWe would like to acknowledge IES Red Team of ByteDance for their assistance.\n\n### Swift\n\nWe would like to acknowledge Marc Schoenefeld, Dr. rer. nat. for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n\n### WindowServer\n\nWe would like to acknowledge Felix Kratz for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:6CD282140CDEAF8489F8B548272C8004"
        },
        {
            "id": "APPLE:1CF82AEAAA72943F9CDABCB142B8F589",
            "score": 8.8,
            "description": "# About the security content of iPadOS 17.7.3\n\nThis document describes the security content of iPadOS 17.7.3.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## iPadOS 17.7.3\n\n### FontParser\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### ImageIO\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### Kernel\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### Kernel\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An app may be able to leak sensitive kernel state\n\nDescription: A race condition was addressed with improved locking.\n\nCVE-2024-54510: Joseph Ravichandran (@0xjprx) of MIT CSAIL\n\n### Kernel\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An app may be able to cause unexpected system termination or corrupt kernel memory\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44245: an anonymous researcher\n\n### libarchive\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a malicious crafted file may lead to a denial-of-service\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44201: Ben Roeder\n\n### libexpat\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### libxpc\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An app may be able to gain elevated privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-44225: \u98ce\u6c90\u4e91\u70df(@binary_fmyy)\n\n### Passwords\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An attacker in a privileged network position may be able to alter network traffic\n\nDescription: This issue was addressed by using HTTPS when sending information over the network.\n\nCVE-2024-54492: Talal Haj Bakry and Tommy Mysk of Mysk Inc. (@mysk_co)\n\n### Safari\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: On a device with Private Relay enabled, adding a website to the Safari Reading List may reveal the originating IP address to the website\n\nDescription: The issue was addressed with improved routing of Safari-originated requests.\n\nCVE-2024-44246: Jacob Braun\n\n### SceneKit\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### VoiceOver\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An attacker with physical access to an iPadOS device may be able to view notification content from the lock screen\n\nDescription: The issue was addressed by adding additional logic.\n\nCVE-2024-54485: Abhay Kailasia (@abhay_kailasia) from C-DAC Thiruvananthapuram India\n\n### WebKit\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\n### WebKit\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n## Additional recognition\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:1CF82AEAAA72943F9CDABCB142B8F589"
        },
        {
            "id": "OSV:GHSA-W8XV-RWGF-4FWH",
            "score": 7.5,
            "description": "Swift ASN.1 can be caused to crash when parsing certain BER/DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructed or primitive forms, and will trigger a `preconditionFailure` if that constraint isn't met.\n\nImportantly, these constraints are actually required to be true in DER, but that correctness wasn't enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.\n\nThese crashes can be triggered when parsing any DER/BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER/DER data from unknown sources, e.g. when parsing TLS certificates.\n\nMany thanks to @baarde for reporting this issue and providing the fix.",
            "url": "https://vulners.com/osv/OSV:GHSA-W8XV-RWGF-4FWH"
        },
        {
            "id": "13DF026F-4A7C-5B1B-8E17-F9A817162F0D",
            "score": 7.0,
            "description": "# Pentagram-exploit-tester\nA test app to check if your device is...",
            "url": "https://vulners.com/githubexploit/13DF026F-4A7C-5B1B-8E17-F9A817162F0D"
        },
        {
            "id": "74BF8111-297B-5D0B-A024-A3D94B6B020D",
            "score": 7.0,
            "description": "# desc_race\niOS 15.1 kernel exploit POC f...",
            "url": "https://vulners.com/githubexploit/74BF8111-297B-5D0B-A024-A3D94B6B020D"
        },
        {
            "id": "46898856-FC78-5007-8483-5AB2AED8AF64",
            "score": 7.0,
            "description": "Proof-of-concept app to overwrite fonts on iOS using [CVE-2022-4...",
            "url": "https://vulners.com/githubexploit/46898856-FC78-5007-8483-5AB2AED8AF64"
        },
        {
            "id": "93E2D30A-F520-58CB-9C5E-D4D8D45BFFEA",
            "score": 7.0,
            "description": "Proof-of-concept app to overwrite fonts on iOS using [CVE-2022-4...",
            "url": "https://vulners.com/githubexploit/93E2D30A-F520-58CB-9C5E-D4D8D45BFFEA"
        },
        {
            "id": "E68FECB1-4516-529C-8A86-4EE26CE33120",
            "score": 7.0,
            "description": "# FileSwitcherX\n\niOS 14.0-15.7.1 & 16.0-16.1.2\n\n# Install\n- ...",
            "url": "https://vulners.com/githubexploit/E68FECB1-4516-529C-8A86-4EE26CE33120"
        },
        {
            "id": "GHSA-W8XV-RWGF-4FWH",
            "score": 7.5,
            "description": "Swift ASN.1 can be caused to crash when parsing certain BER/DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructed or primitive forms, and will trigger a `preconditionFailure` if that constraint isn't met.\n\nImportantly, these constraints are actually required to be true in DER, but that correctness wasn't enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.\n\nThese crashes can be triggered when parsing any DER/BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER/DER data from unknown sources, e.g. when parsing TLS certificates.\n\nMany thanks to @baarde for reporting this issue and providing the fix.",
            "url": "https://vulners.com/github/GHSA-W8XV-RWGF-4FWH"
        },
        {
            "id": "GITLAB-F0354834C4511495A2CA531093E65863",
            "score": 7.5,
            "description": "Swift ASN.1 can be caused to crash when parsing certain BER/DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructed or primitive forms, and will trigger a `preconditionFailure` if that constraint isn't met.\n\nImportantly, these constraints are actually required to be true in DER, but that correctness wasn't enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.\n\nThese crashes can be triggered when parsing any DER/BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER/DER data from unknown sources, e.g. when parsing TLS certificates.\n\nMany thanks to @baarde for reporting this issue and providing the fix.",
            "url": "https://vulners.com/gitlab/GITLAB-F0354834C4511495A2CA531093E65863"
        },
        {
            "id": "1E322FCF-0909-5726-BCB5-40DD2095C79C",
            "score": 7.0,
            "description": "# NoCameraSound\n\niOS 14.0-15.7.1 & 16.0-16.1.2\n\n\u3053\u308c\u306f\u3082\u3046\u4f7f\u7528\u3059\u308b\u3079\u304d\u3067\u306f\u3042\u308a\u307e...",
            "url": "https://vulners.com/githubexploit/1E322FCF-0909-5726-BCB5-40DD2095C79C"
        },
        {
            "id": "E7CA2B56-B67E-5211-A66D-32BAA0E8EAC9",
            "score": 7.0,
            "description": "# Mandela Rewritten\niOS customization app powered by CVE-202...",
            "url": "https://vulners.com/githubexploit/E7CA2B56-B67E-5211-A66D-32BAA0E8EAC9"
        },
        {
            "id": "DB2D679A-CE6D-525A-B27F-8228B8B81695",
            "score": 7.0,
            "description": "# DockTransparent\n\niOS 14 - 16.1.2\n\nReboot your ...",
            "url": "https://vulners.com/githubexploit/DB2D679A-CE6D-525A-B27F-8228B8B81695"
        },
        {
            "id": "A14195A6-6F37-5C85-BFA2-721CAF6DE922",
            "score": 7.0,
            "description": "# Warning! This is being phased out in favour of [Mandela Rewrit...",
            "url": "https://vulners.com/githubexploit/A14195A6-6F37-5C85-BFA2-721CAF6DE922"
        }
    ]
}
{
    "vendor": "apple",
    "product": "icu4c@75",
    "version": "75.1_1",
    "cve_count": 20,
    "cve_details": [
        {
            "id": "OSV:MAL-2025-75",
            "score": 0.0,
            "description": "This package runs commands in a pre-install script that exfils sensitive data to a attacker-controlled domain.\n\n---\n_-= Per source details. Do not edit below this line.=-_\n\n## Source: ghsa-malware (632763242c2df9c72854a919e8fd6a0c7a8b6debedb9c7e22cbd886883c4217b)\nAny computer that has this package installed or running should be considered fully compromised. All secrets and keys stored on that computer should be rotated immediately from a different computer. The package should be removed, but as full control of the computer may have been given to an outside entity, there is no guarantee that removing the package will remove all malicious software resulting from installing it.\n",
            "url": "https://vulners.com/osv/OSV:MAL-2025-75"
        },
        {
            "id": "APPLE:5AF45DC47815ABEE46EF25A46C7D084E",
            "score": 0.0,
            "description": "Apple recommends to install security update tvOS 18.2.1 on devices Apple TV HD and Apple TV 4K (all models)",
            "url": "https://vulners.com/apple/APPLE:5AF45DC47815ABEE46EF25A46C7D084E"
        },
        {
            "id": "APPLE:7A0F39796936B0FD4B519C79D4E1E6F9",
            "score": 0.0,
            "description": "Apple recommends to install security update iOS 18.2.1 and iPadOS 18.2.1 on devices iPhone XS and later, iPad Pro 13-inch, iPad Pro 12.9-inch 3rd generation and later, iPad Pro 11-inch 1st generation and later, iPad Air 3rd generation and later, iPad 7th generation and later, and iPad mini 5th generation and later",
            "url": "https://vulners.com/apple/APPLE:7A0F39796936B0FD4B519C79D4E1E6F9"
        },
        {
            "id": "APPLE:75B6C5A873B17469F7395EA4A49F8377",
            "score": 9.8,
            "description": "# About the security content of Safari 18.2\n\nThis document describes the security content of Safari 18.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## Safari 18.2\n\n### Safari\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: On a device with Private Relay enabled, adding a website to the Safari Reading List may reveal the originating IP address to the website\n\nDescription: The issue was addressed with improved routing of Safari-originated requests.\n\nCVE-2024-44246: Jacob Braun\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### Safari\n\nWe would like to acknowledge Jaydev Ahire for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:75B6C5A873B17469F7395EA4A49F8377"
        },
        {
            "id": "APPLE:8873DE6FD5D82D881C63B24C69107420",
            "score": 9.8,
            "description": "# About the security content of visionOS 2.2\n\nThis document describes the security content of visionOS 2.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## visionOS 2.2\n\n### Crash Reporter\n\nAvailable for: Apple Vision Pro\n\nImpact: An app may be able to access sensitive user data\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-54513: an anonymous researcher\n\n### FontParser\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### ImageIO\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### Kernel\n\nAvailable for: Apple Vision Pro\n\nImpact: An app may be able to cause unexpected system termination or corrupt kernel memory\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44245: an anonymous researcher\n\n### Kernel\n\nAvailable for: Apple Vision Pro\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### libexpat\n\nAvailable for: Apple Vision Pro\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### Passwords\n\nAvailable for: Apple Vision Pro\n\nImpact: An attacker in a privileged network position may be able to alter network traffic\n\nDescription: This issue was addressed by using HTTPS when sending information over the network.\n\nCVE-2024-54492: Talal Haj Bakry and Tommy Mysk of Mysk Inc. (@mysk_co)\n\n### SceneKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### FaceTime Foundation\n\nWe would like to acknowledge Joshua Pellecchia for their assistance.\n\n### Photos\n\nWe would like to acknowledge Chi Yuan Chang of ZUSO ART and taikosoup for their assistance.\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n\n### Safari Private Browsing\n\nWe would like to acknowledge Richard Hyunho Im (@richeeta) with Route Zero Security for their assistance.\n\n### Swift\n\nWe would like to acknowledge Marc Schoenefeld, Dr. rer. nat. for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:8873DE6FD5D82D881C63B24C69107420"
        },
        {
            "id": "APPLE:756711F9F7EA5ABAA930579790F34854",
            "score": 9.8,
            "description": "# About the security content of tvOS 18.2\n\nThis document describes the security content of tvOS 18.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## tvOS 18.2\n\n### AppleMobileFileIntegrity\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: A malicious app may be able to access private information\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54526: Mickey Jin (@patch1t), Arsenii Kostromin (0x3c3e)\n\n### AppleMobileFileIntegrity\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to access sensitive user data\n\nDescription: This issue was addressed with improved checks.\n\nCVE-2024-54527: Mickey Jin (@patch1t)\n\n### Crash Reporter\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to access sensitive user data\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-54513: an anonymous researcher\n\n### FontParser\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### ImageIO\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### Kernel\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### Kernel\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to leak sensitive kernel state\n\nDescription: A race condition was addressed with improved locking.\n\nCVE-2024-54510: Joseph Ravichandran (@0xjprx) of MIT CSAIL\n\n### libexpat\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### libxpc\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to break out of its sandbox\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54514: an anonymous researcher\n\n### libxpc\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to gain elevated privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-44225: \u98ce\u6c90\u4e91\u70df(@binary_fmyy)\n\n### SceneKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### FaceTime\n\nWe would like to acknowledge \u6930\u6930 for their assistance.\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n\n### Swift\n\nWe would like to acknowledge Marc Schoenefeld, Dr. rer. nat. for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:756711F9F7EA5ABAA930579790F34854"
        },
        {
            "id": "APPLE:6CD282140CDEAF8489F8B548272C8004",
            "score": 9.8,
            "description": "# About the security content of macOS Sequoia 15.2\n\nThis document describes the security content of macOS Sequoia 15.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## macOS Sequoia 15.2\n\n### Apple Software Restore\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54477: Mickey Jin (@patch1t), Csaba Fitzl (@theevilbit) of Kandji\n\n### AppleGraphicsControl\n\nAvailable for: macOS Sequoia\n\nImpact: Parsing a maliciously crafted video file may lead to unexpected system termination\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44220: D4m0n\n\n### AppleMobileFileIntegrity\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to access private information\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54526: Mickey Jin (@patch1t), Arsenii Kostromin (0x3c3e)\n\n### AppleMobileFileIntegrity\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access sensitive user data\n\nDescription: This issue was addressed with improved checks.\n\nCVE-2024-54527: Mickey Jin (@patch1t)\n\n### AppleMobileFileIntegrity\n\nAvailable for: macOS Sequoia\n\nImpact: A local attacker may gain access to user's Keychain items\n\nDescription: This issue was addressed by enabling hardened runtime.\n\nCVE-2024-54490: Mickey Jin (@patch1t)\n\n### Audio\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to execute arbitrary code with kernel privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-54529: Dillon Franke working with Google Project Zero\n\n### Crash Reporter\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access sensitive user data\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-54513: an anonymous researcher\n\n### Crash Reporter\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access protected user data\n\nDescription: A logic issue was addressed with improved file handling.\n\nCVE-2024-44300: an anonymous researcher\n\n### DiskArbitration\n\nAvailable for: macOS Sequoia\n\nImpact: An encrypted volume may be accessed by a different user without prompting for the password\n\nDescription: An authorization issue was addressed with improved state management.\n\nCVE-2024-54466: Michael Cohen\n\n### Disk Utility\n\nAvailable for: macOS Sequoia\n\nImpact: Running a mount command may unexpectedly execute arbitrary code\n\nDescription: A path handling issue was addressed with improved validation.\n\nCVE-2024-54489: D\u2019Angelo Gonzalez of CrowdStrike\n\n### FontParser\n\nAvailable for: macOS Sequoia\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### Foundation\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to gain root privileges\n\nDescription: A logic issue was addressed with improved file handling.\n\nCVE-2024-44291: Arsenii Kostromin (0x3c3e)\n\n### ImageIO\n\nAvailable for: macOS Sequoia\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### IOMobileFrameBuffer\n\nAvailable for: macOS Sequoia\n\nImpact: An attacker may be able to cause unexpected system termination or arbitrary code execution in DCP firmware\n\nDescription: An out-of-bounds access issue was addressed with improved bounds checking.\n\nCVE-2024-54506: Ye Zhang (@VAR10CK) of Baidu Security\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to leak sensitive kernel state\n\nDescription: A race condition was addressed with improved locking.\n\nCVE-2024-54510: Joseph Ravichandran (@0xjprx) of MIT CSAIL\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to cause unexpected system termination or corrupt kernel memory\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44245: an anonymous researcher\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to bypass kASLR\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-54531: Hyerean Jang, Taehun Kim, and Youngjoo Shin\n\n### LaunchServices\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to elevate privileges\n\nDescription: A logic issue was addressed with improved state management.\n\nCVE-2024-54465: an anonymous researcher\n\n### libexpat\n\nAvailable for: macOS Sequoia\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### libxpc\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to break out of its sandbox\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54514: an anonymous researcher\n\n### libxpc\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to gain elevated privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-44225: \u98ce\u6c90\u4e91\u70df(@binary_fmyy)\n\n### Logging\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious application may be able to determine a user's current location\n\nDescription: The issue was resolved by sanitizing logging\n\nCVE-2024-54491: Kirin (@Pwnrin)\n\n### MediaRemote\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: The issue was resolved by sanitizing logging.\n\nCVE-2024-54484: Meng Zhang (\u9cb8\u843d) of NorthSea\n\n### Notification Center\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: A privacy issue was addressed with improved private data redaction for log entries.\n\nCVE-2024-54504: \u795e\u7f5a(@Pwnrin)\n\n### PackageKit\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54474: Mickey Jin (@patch1t)\n\nCVE-2024-54476: Mickey Jin (@patch1t), Bohdan Stasiuk (@Bohdan_Stasiuk)\n\n### Passwords\n\nAvailable for: macOS Sequoia\n\nImpact: An attacker in a privileged network position may be able to alter network traffic\n\nDescription: This issue was addressed by using HTTPS when sending information over the network.\n\nCVE-2024-54492: Talal Haj Bakry and Tommy Mysk of Mysk Inc. (@mysk_co)\n\n### Perl\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to modify protected parts of the file system\n\nDescription: A logic issue was addressed with improved state management.\n\nCVE-2023-32395: Arsenii Kostromin (0x3c3e)\n\n### Safari\n\nAvailable for: macOS Sequoia\n\nImpact: On a device with Private Relay enabled, adding a website to the Safari Reading List may reveal the originating IP address to the website\n\nDescription: The issue was addressed with improved routing of Safari-originated requests.\n\nCVE-2024-44246: Jacob Braun\n\n### SceneKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to gain root privileges\n\nDescription: A logic issue was addressed with improved restrictions.\n\nCVE-2024-54515: an anonymous researcher\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to overwrite arbitrary files\n\nDescription: A logic issue was addressed with improved restrictions.\n\nCVE-2024-54528: an anonymous researcher\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to access arbitrary files\n\nDescription: A logic issue was addressed with improved file handling.\n\nCVE-2024-54524: an anonymous researcher\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to break out of its sandbox\n\nDescription: A path handling issue was addressed with improved validation.\n\nCVE-2024-54498: an anonymous researcher\n\n### Shortcuts\n\nAvailable for: macOS Sequoia\n\nImpact: Privacy indicators for microphone access may be attributed incorrectly\n\nDescription: This issue was addressed through improved state management.\n\nCVE-2024-54493: Yokesh Muthu K\n\n### StorageKit\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to modify protected parts of the file system\n\nDescription: A configuration issue was addressed with additional restrictions.\n\nCVE-2024-44243: Mickey Jin (@patch1t), Jonathan Bar Or (@yo_yo_yo_jbo) of Microsoft\n\n### StorageKit\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to gain root privileges\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-44224: Amy (@asentientbot)\n\n### Swift\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to modify protected parts of the file system\n\nDescription: The issue was addressed with improved permissions logic.\n\nCVE-2024-54495: Claudio Bozzato and Francesco Benvenuto of Cisco Talos, Arsenii Kostromin (0x3c3e)\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### ATS\n\nWe would like to acknowledge Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative for their assistance.\n\n### CUPS\n\nWe would like to acknowledge evilsocket for their assistance.\n\n### FaceTime\n\nWe would like to acknowledge \u6930\u6930 for their assistance.\n\n### FaceTime Foundation\n\nWe would like to acknowledge Joshua Pellecchia for their assistance.\n\n### Kernel\n\nWe would like to acknowledge Zweig of Kunlun Lab for their assistance.\n\n### NSOpenPanel\n\nWe would like to acknowledge Shaheen Fazim for their assistance.\n\n### Photos\n\nWe would like to acknowledge Chi Yuan Chang of ZUSO ART and taikosoup for their assistance.\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n\n### Safari\n\nWe would like to acknowledge Jaydev Ahire for their assistance.\n\n### Safari Private Browsing\n\nWe would like to acknowledge Richard Hyunho Im (@richeeta) with Route Zero Security for their assistance.\n\n### Sandbox\n\nWe would like to acknowledge IES Red Team of ByteDance for their assistance.\n\n### Swift\n\nWe would like to acknowledge Marc Schoenefeld, Dr. rer. nat. for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n\n### WindowServer\n\nWe would like to acknowledge Felix Kratz for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:6CD282140CDEAF8489F8B548272C8004"
        },
        {
            "id": "APPLE:1CF82AEAAA72943F9CDABCB142B8F589",
            "score": 8.8,
            "description": "# About the security content of iPadOS 17.7.3\n\nThis document describes the security content of iPadOS 17.7.3.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## iPadOS 17.7.3\n\n### FontParser\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### ImageIO\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### Kernel\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### Kernel\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An app may be able to leak sensitive kernel state\n\nDescription: A race condition was addressed with improved locking.\n\nCVE-2024-54510: Joseph Ravichandran (@0xjprx) of MIT CSAIL\n\n### Kernel\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An app may be able to cause unexpected system termination or corrupt kernel memory\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44245: an anonymous researcher\n\n### libarchive\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a malicious crafted file may lead to a denial-of-service\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44201: Ben Roeder\n\n### libexpat\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### libxpc\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An app may be able to gain elevated privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-44225: \u98ce\u6c90\u4e91\u70df(@binary_fmyy)\n\n### Passwords\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An attacker in a privileged network position may be able to alter network traffic\n\nDescription: This issue was addressed by using HTTPS when sending information over the network.\n\nCVE-2024-54492: Talal Haj Bakry and Tommy Mysk of Mysk Inc. (@mysk_co)\n\n### Safari\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: On a device with Private Relay enabled, adding a website to the Safari Reading List may reveal the originating IP address to the website\n\nDescription: The issue was addressed with improved routing of Safari-originated requests.\n\nCVE-2024-44246: Jacob Braun\n\n### SceneKit\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### VoiceOver\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An attacker with physical access to an iPadOS device may be able to view notification content from the lock screen\n\nDescription: The issue was addressed by adding additional logic.\n\nCVE-2024-54485: Abhay Kailasia (@abhay_kailasia) from C-DAC Thiruvananthapuram India\n\n### WebKit\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\n### WebKit\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n## Additional recognition\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:1CF82AEAAA72943F9CDABCB142B8F589"
        },
        {
            "id": "OSV:GHSA-W8XV-RWGF-4FWH",
            "score": 7.5,
            "description": "Swift ASN.1 can be caused to crash when parsing certain BER/DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructed or primitive forms, and will trigger a `preconditionFailure` if that constraint isn't met.\n\nImportantly, these constraints are actually required to be true in DER, but that correctness wasn't enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.\n\nThese crashes can be triggered when parsing any DER/BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER/DER data from unknown sources, e.g. when parsing TLS certificates.\n\nMany thanks to @baarde for reporting this issue and providing the fix.",
            "url": "https://vulners.com/osv/OSV:GHSA-W8XV-RWGF-4FWH"
        },
        {
            "id": "13DF026F-4A7C-5B1B-8E17-F9A817162F0D",
            "score": 7.0,
            "description": "# Pentagram-exploit-tester\nA test app to check if your device is...",
            "url": "https://vulners.com/githubexploit/13DF026F-4A7C-5B1B-8E17-F9A817162F0D"
        },
        {
            "id": "74BF8111-297B-5D0B-A024-A3D94B6B020D",
            "score": 7.0,
            "description": "# desc_race\niOS 15.1 kernel exploit POC f...",
            "url": "https://vulners.com/githubexploit/74BF8111-297B-5D0B-A024-A3D94B6B020D"
        },
        {
            "id": "46898856-FC78-5007-8483-5AB2AED8AF64",
            "score": 7.0,
            "description": "Proof-of-concept app to overwrite fonts on iOS using [CVE-2022-4...",
            "url": "https://vulners.com/githubexploit/46898856-FC78-5007-8483-5AB2AED8AF64"
        },
        {
            "id": "93E2D30A-F520-58CB-9C5E-D4D8D45BFFEA",
            "score": 7.0,
            "description": "Proof-of-concept app to overwrite fonts on iOS using [CVE-2022-4...",
            "url": "https://vulners.com/githubexploit/93E2D30A-F520-58CB-9C5E-D4D8D45BFFEA"
        },
        {
            "id": "E68FECB1-4516-529C-8A86-4EE26CE33120",
            "score": 7.0,
            "description": "# FileSwitcherX\n\niOS 14.0-15.7.1 & 16.0-16.1.2\n\n# Install\n- ...",
            "url": "https://vulners.com/githubexploit/E68FECB1-4516-529C-8A86-4EE26CE33120"
        },
        {
            "id": "GHSA-W8XV-RWGF-4FWH",
            "score": 7.5,
            "description": "Swift ASN.1 can be caused to crash when parsing certain BER/DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructed or primitive forms, and will trigger a `preconditionFailure` if that constraint isn't met.\n\nImportantly, these constraints are actually required to be true in DER, but that correctness wasn't enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.\n\nThese crashes can be triggered when parsing any DER/BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER/DER data from unknown sources, e.g. when parsing TLS certificates.\n\nMany thanks to @baarde for reporting this issue and providing the fix.",
            "url": "https://vulners.com/github/GHSA-W8XV-RWGF-4FWH"
        },
        {
            "id": "GITLAB-F0354834C4511495A2CA531093E65863",
            "score": 7.5,
            "description": "Swift ASN.1 can be caused to crash when parsing certain BER/DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructed or primitive forms, and will trigger a `preconditionFailure` if that constraint isn't met.\n\nImportantly, these constraints are actually required to be true in DER, but that correctness wasn't enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.\n\nThese crashes can be triggered when parsing any DER/BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER/DER data from unknown sources, e.g. when parsing TLS certificates.\n\nMany thanks to @baarde for reporting this issue and providing the fix.",
            "url": "https://vulners.com/gitlab/GITLAB-F0354834C4511495A2CA531093E65863"
        },
        {
            "id": "1E322FCF-0909-5726-BCB5-40DD2095C79C",
            "score": 7.0,
            "description": "# NoCameraSound\n\niOS 14.0-15.7.1 & 16.0-16.1.2\n\n\u3053\u308c\u306f\u3082\u3046\u4f7f\u7528\u3059\u308b\u3079\u304d\u3067\u306f\u3042\u308a\u307e...",
            "url": "https://vulners.com/githubexploit/1E322FCF-0909-5726-BCB5-40DD2095C79C"
        },
        {
            "id": "E7CA2B56-B67E-5211-A66D-32BAA0E8EAC9",
            "score": 7.0,
            "description": "# Mandela Rewritten\niOS customization app powered by CVE-202...",
            "url": "https://vulners.com/githubexploit/E7CA2B56-B67E-5211-A66D-32BAA0E8EAC9"
        },
        {
            "id": "DB2D679A-CE6D-525A-B27F-8228B8B81695",
            "score": 7.0,
            "description": "# DockTransparent\n\niOS 14 - 16.1.2\n\nReboot your ...",
            "url": "https://vulners.com/githubexploit/DB2D679A-CE6D-525A-B27F-8228B8B81695"
        },
        {
            "id": "A14195A6-6F37-5C85-BFA2-721CAF6DE922",
            "score": 7.0,
            "description": "# Warning! This is being phased out in favour of [Mandela Rewrit...",
            "url": "https://vulners.com/githubexploit/A14195A6-6F37-5C85-BFA2-721CAF6DE922"
        }
    ]
}
{
    "vendor": "apple",
    "product": "icu4c@75",
    "current_version": "75.1",
    "new_version": "75.1_1",
    "status": "pas s\u00fbr",
    "cve_current": [
        {
            "id": "OSV:MAL-2025-75",
            "score": 0.0,
            "description": "This package runs commands in a pre-install script that exfils sensitive data to a attacker-controlled domain.\n\n---\n_-= Per source details. Do not edit below this line.=-_\n\n## Source: ghsa-malware (632763242c2df9c72854a919e8fd6a0c7a8b6debedb9c7e22cbd886883c4217b)\nAny computer that has this package installed or running should be considered fully compromised. All secrets and keys stored on that computer should be rotated immediately from a different computer. The package should be removed, but as full control of the computer may have been given to an outside entity, there is no guarantee that removing the package will remove all malicious software resulting from installing it.\n",
            "url": "https://vulners.com/osv/OSV:MAL-2025-75"
        },
        {
            "id": "APPLE:5AF45DC47815ABEE46EF25A46C7D084E",
            "score": 0.0,
            "description": "Apple recommends to install security update tvOS 18.2.1 on devices Apple TV HD and Apple TV 4K (all models)",
            "url": "https://vulners.com/apple/APPLE:5AF45DC47815ABEE46EF25A46C7D084E"
        },
        {
            "id": "APPLE:7A0F39796936B0FD4B519C79D4E1E6F9",
            "score": 0.0,
            "description": "Apple recommends to install security update iOS 18.2.1 and iPadOS 18.2.1 on devices iPhone XS and later, iPad Pro 13-inch, iPad Pro 12.9-inch 3rd generation and later, iPad Pro 11-inch 1st generation and later, iPad Air 3rd generation and later, iPad 7th generation and later, and iPad mini 5th generation and later",
            "url": "https://vulners.com/apple/APPLE:7A0F39796936B0FD4B519C79D4E1E6F9"
        },
        {
            "id": "APPLE:75B6C5A873B17469F7395EA4A49F8377",
            "score": 9.8,
            "description": "# About the security content of Safari 18.2\n\nThis document describes the security content of Safari 18.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## Safari 18.2\n\n### Safari\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: On a device with Private Relay enabled, adding a website to the Safari Reading List may reveal the originating IP address to the website\n\nDescription: The issue was addressed with improved routing of Safari-originated requests.\n\nCVE-2024-44246: Jacob Braun\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### Safari\n\nWe would like to acknowledge Jaydev Ahire for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:75B6C5A873B17469F7395EA4A49F8377"
        },
        {
            "id": "APPLE:8873DE6FD5D82D881C63B24C69107420",
            "score": 9.8,
            "description": "# About the security content of visionOS 2.2\n\nThis document describes the security content of visionOS 2.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## visionOS 2.2\n\n### Crash Reporter\n\nAvailable for: Apple Vision Pro\n\nImpact: An app may be able to access sensitive user data\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-54513: an anonymous researcher\n\n### FontParser\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### ImageIO\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### Kernel\n\nAvailable for: Apple Vision Pro\n\nImpact: An app may be able to cause unexpected system termination or corrupt kernel memory\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44245: an anonymous researcher\n\n### Kernel\n\nAvailable for: Apple Vision Pro\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### libexpat\n\nAvailable for: Apple Vision Pro\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### Passwords\n\nAvailable for: Apple Vision Pro\n\nImpact: An attacker in a privileged network position may be able to alter network traffic\n\nDescription: This issue was addressed by using HTTPS when sending information over the network.\n\nCVE-2024-54492: Talal Haj Bakry and Tommy Mysk of Mysk Inc. (@mysk_co)\n\n### SceneKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### FaceTime Foundation\n\nWe would like to acknowledge Joshua Pellecchia for their assistance.\n\n### Photos\n\nWe would like to acknowledge Chi Yuan Chang of ZUSO ART and taikosoup for their assistance.\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n\n### Safari Private Browsing\n\nWe would like to acknowledge Richard Hyunho Im (@richeeta) with Route Zero Security for their assistance.\n\n### Swift\n\nWe would like to acknowledge Marc Schoenefeld, Dr. rer. nat. for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:8873DE6FD5D82D881C63B24C69107420"
        },
        {
            "id": "APPLE:756711F9F7EA5ABAA930579790F34854",
            "score": 9.8,
            "description": "# About the security content of tvOS 18.2\n\nThis document describes the security content of tvOS 18.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## tvOS 18.2\n\n### AppleMobileFileIntegrity\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: A malicious app may be able to access private information\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54526: Mickey Jin (@patch1t), Arsenii Kostromin (0x3c3e)\n\n### AppleMobileFileIntegrity\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to access sensitive user data\n\nDescription: This issue was addressed with improved checks.\n\nCVE-2024-54527: Mickey Jin (@patch1t)\n\n### Crash Reporter\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to access sensitive user data\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-54513: an anonymous researcher\n\n### FontParser\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### ImageIO\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### Kernel\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### Kernel\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to leak sensitive kernel state\n\nDescription: A race condition was addressed with improved locking.\n\nCVE-2024-54510: Joseph Ravichandran (@0xjprx) of MIT CSAIL\n\n### libexpat\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### libxpc\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to break out of its sandbox\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54514: an anonymous researcher\n\n### libxpc\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to gain elevated privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-44225: \u98ce\u6c90\u4e91\u70df(@binary_fmyy)\n\n### SceneKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### FaceTime\n\nWe would like to acknowledge \u6930\u6930 for their assistance.\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n\n### Swift\n\nWe would like to acknowledge Marc Schoenefeld, Dr. rer. nat. for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:756711F9F7EA5ABAA930579790F34854"
        },
        {
            "id": "APPLE:6CD282140CDEAF8489F8B548272C8004",
            "score": 9.8,
            "description": "# About the security content of macOS Sequoia 15.2\n\nThis document describes the security content of macOS Sequoia 15.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## macOS Sequoia 15.2\n\n### Apple Software Restore\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54477: Mickey Jin (@patch1t), Csaba Fitzl (@theevilbit) of Kandji\n\n### AppleGraphicsControl\n\nAvailable for: macOS Sequoia\n\nImpact: Parsing a maliciously crafted video file may lead to unexpected system termination\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44220: D4m0n\n\n### AppleMobileFileIntegrity\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to access private information\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54526: Mickey Jin (@patch1t), Arsenii Kostromin (0x3c3e)\n\n### AppleMobileFileIntegrity\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access sensitive user data\n\nDescription: This issue was addressed with improved checks.\n\nCVE-2024-54527: Mickey Jin (@patch1t)\n\n### AppleMobileFileIntegrity\n\nAvailable for: macOS Sequoia\n\nImpact: A local attacker may gain access to user's Keychain items\n\nDescription: This issue was addressed by enabling hardened runtime.\n\nCVE-2024-54490: Mickey Jin (@patch1t)\n\n### Audio\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to execute arbitrary code with kernel privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-54529: Dillon Franke working with Google Project Zero\n\n### Crash Reporter\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access sensitive user data\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-54513: an anonymous researcher\n\n### Crash Reporter\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access protected user data\n\nDescription: A logic issue was addressed with improved file handling.\n\nCVE-2024-44300: an anonymous researcher\n\n### DiskArbitration\n\nAvailable for: macOS Sequoia\n\nImpact: An encrypted volume may be accessed by a different user without prompting for the password\n\nDescription: An authorization issue was addressed with improved state management.\n\nCVE-2024-54466: Michael Cohen\n\n### Disk Utility\n\nAvailable for: macOS Sequoia\n\nImpact: Running a mount command may unexpectedly execute arbitrary code\n\nDescription: A path handling issue was addressed with improved validation.\n\nCVE-2024-54489: D\u2019Angelo Gonzalez of CrowdStrike\n\n### FontParser\n\nAvailable for: macOS Sequoia\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### Foundation\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to gain root privileges\n\nDescription: A logic issue was addressed with improved file handling.\n\nCVE-2024-44291: Arsenii Kostromin (0x3c3e)\n\n### ImageIO\n\nAvailable for: macOS Sequoia\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### IOMobileFrameBuffer\n\nAvailable for: macOS Sequoia\n\nImpact: An attacker may be able to cause unexpected system termination or arbitrary code execution in DCP firmware\n\nDescription: An out-of-bounds access issue was addressed with improved bounds checking.\n\nCVE-2024-54506: Ye Zhang (@VAR10CK) of Baidu Security\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to leak sensitive kernel state\n\nDescription: A race condition was addressed with improved locking.\n\nCVE-2024-54510: Joseph Ravichandran (@0xjprx) of MIT CSAIL\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to cause unexpected system termination or corrupt kernel memory\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44245: an anonymous researcher\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to bypass kASLR\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-54531: Hyerean Jang, Taehun Kim, and Youngjoo Shin\n\n### LaunchServices\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to elevate privileges\n\nDescription: A logic issue was addressed with improved state management.\n\nCVE-2024-54465: an anonymous researcher\n\n### libexpat\n\nAvailable for: macOS Sequoia\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### libxpc\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to break out of its sandbox\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54514: an anonymous researcher\n\n### libxpc\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to gain elevated privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-44225: \u98ce\u6c90\u4e91\u70df(@binary_fmyy)\n\n### Logging\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious application may be able to determine a user's current location\n\nDescription: The issue was resolved by sanitizing logging\n\nCVE-2024-54491: Kirin (@Pwnrin)\n\n### MediaRemote\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: The issue was resolved by sanitizing logging.\n\nCVE-2024-54484: Meng Zhang (\u9cb8\u843d) of NorthSea\n\n### Notification Center\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: A privacy issue was addressed with improved private data redaction for log entries.\n\nCVE-2024-54504: \u795e\u7f5a(@Pwnrin)\n\n### PackageKit\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54474: Mickey Jin (@patch1t)\n\nCVE-2024-54476: Mickey Jin (@patch1t), Bohdan Stasiuk (@Bohdan_Stasiuk)\n\n### Passwords\n\nAvailable for: macOS Sequoia\n\nImpact: An attacker in a privileged network position may be able to alter network traffic\n\nDescription: This issue was addressed by using HTTPS when sending information over the network.\n\nCVE-2024-54492: Talal Haj Bakry and Tommy Mysk of Mysk Inc. (@mysk_co)\n\n### Perl\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to modify protected parts of the file system\n\nDescription: A logic issue was addressed with improved state management.\n\nCVE-2023-32395: Arsenii Kostromin (0x3c3e)\n\n### Safari\n\nAvailable for: macOS Sequoia\n\nImpact: On a device with Private Relay enabled, adding a website to the Safari Reading List may reveal the originating IP address to the website\n\nDescription: The issue was addressed with improved routing of Safari-originated requests.\n\nCVE-2024-44246: Jacob Braun\n\n### SceneKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to gain root privileges\n\nDescription: A logic issue was addressed with improved restrictions.\n\nCVE-2024-54515: an anonymous researcher\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to overwrite arbitrary files\n\nDescription: A logic issue was addressed with improved restrictions.\n\nCVE-2024-54528: an anonymous researcher\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to access arbitrary files\n\nDescription: A logic issue was addressed with improved file handling.\n\nCVE-2024-54524: an anonymous researcher\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to break out of its sandbox\n\nDescription: A path handling issue was addressed with improved validation.\n\nCVE-2024-54498: an anonymous researcher\n\n### Shortcuts\n\nAvailable for: macOS Sequoia\n\nImpact: Privacy indicators for microphone access may be attributed incorrectly\n\nDescription: This issue was addressed through improved state management.\n\nCVE-2024-54493: Yokesh Muthu K\n\n### StorageKit\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to modify protected parts of the file system\n\nDescription: A configuration issue was addressed with additional restrictions.\n\nCVE-2024-44243: Mickey Jin (@patch1t), Jonathan Bar Or (@yo_yo_yo_jbo) of Microsoft\n\n### StorageKit\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to gain root privileges\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-44224: Amy (@asentientbot)\n\n### Swift\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to modify protected parts of the file system\n\nDescription: The issue was addressed with improved permissions logic.\n\nCVE-2024-54495: Claudio Bozzato and Francesco Benvenuto of Cisco Talos, Arsenii Kostromin (0x3c3e)\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### ATS\n\nWe would like to acknowledge Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative for their assistance.\n\n### CUPS\n\nWe would like to acknowledge evilsocket for their assistance.\n\n### FaceTime\n\nWe would like to acknowledge \u6930\u6930 for their assistance.\n\n### FaceTime Foundation\n\nWe would like to acknowledge Joshua Pellecchia for their assistance.\n\n### Kernel\n\nWe would like to acknowledge Zweig of Kunlun Lab for their assistance.\n\n### NSOpenPanel\n\nWe would like to acknowledge Shaheen Fazim for their assistance.\n\n### Photos\n\nWe would like to acknowledge Chi Yuan Chang of ZUSO ART and taikosoup for their assistance.\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n\n### Safari\n\nWe would like to acknowledge Jaydev Ahire for their assistance.\n\n### Safari Private Browsing\n\nWe would like to acknowledge Richard Hyunho Im (@richeeta) with Route Zero Security for their assistance.\n\n### Sandbox\n\nWe would like to acknowledge IES Red Team of ByteDance for their assistance.\n\n### Swift\n\nWe would like to acknowledge Marc Schoenefeld, Dr. rer. nat. for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n\n### WindowServer\n\nWe would like to acknowledge Felix Kratz for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:6CD282140CDEAF8489F8B548272C8004"
        },
        {
            "id": "APPLE:1CF82AEAAA72943F9CDABCB142B8F589",
            "score": 8.8,
            "description": "# About the security content of iPadOS 17.7.3\n\nThis document describes the security content of iPadOS 17.7.3.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## iPadOS 17.7.3\n\n### FontParser\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### ImageIO\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### Kernel\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### Kernel\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An app may be able to leak sensitive kernel state\n\nDescription: A race condition was addressed with improved locking.\n\nCVE-2024-54510: Joseph Ravichandran (@0xjprx) of MIT CSAIL\n\n### Kernel\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An app may be able to cause unexpected system termination or corrupt kernel memory\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44245: an anonymous researcher\n\n### libarchive\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a malicious crafted file may lead to a denial-of-service\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44201: Ben Roeder\n\n### libexpat\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### libxpc\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An app may be able to gain elevated privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-44225: \u98ce\u6c90\u4e91\u70df(@binary_fmyy)\n\n### Passwords\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An attacker in a privileged network position may be able to alter network traffic\n\nDescription: This issue was addressed by using HTTPS when sending information over the network.\n\nCVE-2024-54492: Talal Haj Bakry and Tommy Mysk of Mysk Inc. (@mysk_co)\n\n### Safari\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: On a device with Private Relay enabled, adding a website to the Safari Reading List may reveal the originating IP address to the website\n\nDescription: The issue was addressed with improved routing of Safari-originated requests.\n\nCVE-2024-44246: Jacob Braun\n\n### SceneKit\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### VoiceOver\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An attacker with physical access to an iPadOS device may be able to view notification content from the lock screen\n\nDescription: The issue was addressed by adding additional logic.\n\nCVE-2024-54485: Abhay Kailasia (@abhay_kailasia) from C-DAC Thiruvananthapuram India\n\n### WebKit\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\n### WebKit\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n## Additional recognition\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:1CF82AEAAA72943F9CDABCB142B8F589"
        },
        {
            "id": "OSV:GHSA-W8XV-RWGF-4FWH",
            "score": 7.5,
            "description": "Swift ASN.1 can be caused to crash when parsing certain BER/DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructed or primitive forms, and will trigger a `preconditionFailure` if that constraint isn't met.\n\nImportantly, these constraints are actually required to be true in DER, but that correctness wasn't enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.\n\nThese crashes can be triggered when parsing any DER/BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER/DER data from unknown sources, e.g. when parsing TLS certificates.\n\nMany thanks to @baarde for reporting this issue and providing the fix.",
            "url": "https://vulners.com/osv/OSV:GHSA-W8XV-RWGF-4FWH"
        },
        {
            "id": "13DF026F-4A7C-5B1B-8E17-F9A817162F0D",
            "score": 7.0,
            "description": "# Pentagram-exploit-tester\nA test app to check if your device is...",
            "url": "https://vulners.com/githubexploit/13DF026F-4A7C-5B1B-8E17-F9A817162F0D"
        },
        {
            "id": "74BF8111-297B-5D0B-A024-A3D94B6B020D",
            "score": 7.0,
            "description": "# desc_race\niOS 15.1 kernel exploit POC f...",
            "url": "https://vulners.com/githubexploit/74BF8111-297B-5D0B-A024-A3D94B6B020D"
        },
        {
            "id": "46898856-FC78-5007-8483-5AB2AED8AF64",
            "score": 7.0,
            "description": "Proof-of-concept app to overwrite fonts on iOS using [CVE-2022-4...",
            "url": "https://vulners.com/githubexploit/46898856-FC78-5007-8483-5AB2AED8AF64"
        },
        {
            "id": "93E2D30A-F520-58CB-9C5E-D4D8D45BFFEA",
            "score": 7.0,
            "description": "Proof-of-concept app to overwrite fonts on iOS using [CVE-2022-4...",
            "url": "https://vulners.com/githubexploit/93E2D30A-F520-58CB-9C5E-D4D8D45BFFEA"
        },
        {
            "id": "E68FECB1-4516-529C-8A86-4EE26CE33120",
            "score": 7.0,
            "description": "# FileSwitcherX\n\niOS 14.0-15.7.1 & 16.0-16.1.2\n\n# Install\n- ...",
            "url": "https://vulners.com/githubexploit/E68FECB1-4516-529C-8A86-4EE26CE33120"
        },
        {
            "id": "GHSA-W8XV-RWGF-4FWH",
            "score": 7.5,
            "description": "Swift ASN.1 can be caused to crash when parsing certain BER/DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructed or primitive forms, and will trigger a `preconditionFailure` if that constraint isn't met.\n\nImportantly, these constraints are actually required to be true in DER, but that correctness wasn't enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.\n\nThese crashes can be triggered when parsing any DER/BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER/DER data from unknown sources, e.g. when parsing TLS certificates.\n\nMany thanks to @baarde for reporting this issue and providing the fix.",
            "url": "https://vulners.com/github/GHSA-W8XV-RWGF-4FWH"
        },
        {
            "id": "GITLAB-F0354834C4511495A2CA531093E65863",
            "score": 7.5,
            "description": "Swift ASN.1 can be caused to crash when parsing certain BER/DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructed or primitive forms, and will trigger a `preconditionFailure` if that constraint isn't met.\n\nImportantly, these constraints are actually required to be true in DER, but that correctness wasn't enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.\n\nThese crashes can be triggered when parsing any DER/BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER/DER data from unknown sources, e.g. when parsing TLS certificates.\n\nMany thanks to @baarde for reporting this issue and providing the fix.",
            "url": "https://vulners.com/gitlab/GITLAB-F0354834C4511495A2CA531093E65863"
        },
        {
            "id": "1E322FCF-0909-5726-BCB5-40DD2095C79C",
            "score": 7.0,
            "description": "# NoCameraSound\n\niOS 14.0-15.7.1 & 16.0-16.1.2\n\n\u3053\u308c\u306f\u3082\u3046\u4f7f\u7528\u3059\u308b\u3079\u304d\u3067\u306f\u3042\u308a\u307e...",
            "url": "https://vulners.com/githubexploit/1E322FCF-0909-5726-BCB5-40DD2095C79C"
        },
        {
            "id": "E7CA2B56-B67E-5211-A66D-32BAA0E8EAC9",
            "score": 7.0,
            "description": "# Mandela Rewritten\niOS customization app powered by CVE-202...",
            "url": "https://vulners.com/githubexploit/E7CA2B56-B67E-5211-A66D-32BAA0E8EAC9"
        },
        {
            "id": "DB2D679A-CE6D-525A-B27F-8228B8B81695",
            "score": 7.0,
            "description": "# DockTransparent\n\niOS 14 - 16.1.2\n\nReboot your ...",
            "url": "https://vulners.com/githubexploit/DB2D679A-CE6D-525A-B27F-8228B8B81695"
        },
        {
            "id": "A14195A6-6F37-5C85-BFA2-721CAF6DE922",
            "score": 7.0,
            "description": "# Warning! This is being phased out in favour of [Mandela Rewrit...",
            "url": "https://vulners.com/githubexploit/A14195A6-6F37-5C85-BFA2-721CAF6DE922"
        }
    ],
    "cve_new": [
        {
            "id": "OSV:MAL-2025-75",
            "score": 0.0,
            "description": "This package runs commands in a pre-install script that exfils sensitive data to a attacker-controlled domain.\n\n---\n_-= Per source details. Do not edit below this line.=-_\n\n## Source: ghsa-malware (632763242c2df9c72854a919e8fd6a0c7a8b6debedb9c7e22cbd886883c4217b)\nAny computer that has this package installed or running should be considered fully compromised. All secrets and keys stored on that computer should be rotated immediately from a different computer. The package should be removed, but as full control of the computer may have been given to an outside entity, there is no guarantee that removing the package will remove all malicious software resulting from installing it.\n",
            "url": "https://vulners.com/osv/OSV:MAL-2025-75"
        },
        {
            "id": "APPLE:5AF45DC47815ABEE46EF25A46C7D084E",
            "score": 0.0,
            "description": "Apple recommends to install security update tvOS 18.2.1 on devices Apple TV HD and Apple TV 4K (all models)",
            "url": "https://vulners.com/apple/APPLE:5AF45DC47815ABEE46EF25A46C7D084E"
        },
        {
            "id": "APPLE:7A0F39796936B0FD4B519C79D4E1E6F9",
            "score": 0.0,
            "description": "Apple recommends to install security update iOS 18.2.1 and iPadOS 18.2.1 on devices iPhone XS and later, iPad Pro 13-inch, iPad Pro 12.9-inch 3rd generation and later, iPad Pro 11-inch 1st generation and later, iPad Air 3rd generation and later, iPad 7th generation and later, and iPad mini 5th generation and later",
            "url": "https://vulners.com/apple/APPLE:7A0F39796936B0FD4B519C79D4E1E6F9"
        },
        {
            "id": "APPLE:75B6C5A873B17469F7395EA4A49F8377",
            "score": 9.8,
            "description": "# About the security content of Safari 18.2\n\nThis document describes the security content of Safari 18.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## Safari 18.2\n\n### Safari\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: On a device with Private Relay enabled, adding a website to the Safari Reading List may reveal the originating IP address to the website\n\nDescription: The issue was addressed with improved routing of Safari-originated requests.\n\nCVE-2024-44246: Jacob Braun\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: macOS Ventura and macOS Sonoma\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### Safari\n\nWe would like to acknowledge Jaydev Ahire for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:75B6C5A873B17469F7395EA4A49F8377"
        },
        {
            "id": "APPLE:8873DE6FD5D82D881C63B24C69107420",
            "score": 9.8,
            "description": "# About the security content of visionOS 2.2\n\nThis document describes the security content of visionOS 2.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## visionOS 2.2\n\n### Crash Reporter\n\nAvailable for: Apple Vision Pro\n\nImpact: An app may be able to access sensitive user data\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-54513: an anonymous researcher\n\n### FontParser\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### ImageIO\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### Kernel\n\nAvailable for: Apple Vision Pro\n\nImpact: An app may be able to cause unexpected system termination or corrupt kernel memory\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44245: an anonymous researcher\n\n### Kernel\n\nAvailable for: Apple Vision Pro\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### libexpat\n\nAvailable for: Apple Vision Pro\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### Passwords\n\nAvailable for: Apple Vision Pro\n\nImpact: An attacker in a privileged network position may be able to alter network traffic\n\nDescription: This issue was addressed by using HTTPS when sending information over the network.\n\nCVE-2024-54492: Talal Haj Bakry and Tommy Mysk of Mysk Inc. (@mysk_co)\n\n### SceneKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: Apple Vision Pro\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### FaceTime Foundation\n\nWe would like to acknowledge Joshua Pellecchia for their assistance.\n\n### Photos\n\nWe would like to acknowledge Chi Yuan Chang of ZUSO ART and taikosoup for their assistance.\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n\n### Safari Private Browsing\n\nWe would like to acknowledge Richard Hyunho Im (@richeeta) with Route Zero Security for their assistance.\n\n### Swift\n\nWe would like to acknowledge Marc Schoenefeld, Dr. rer. nat. for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:8873DE6FD5D82D881C63B24C69107420"
        },
        {
            "id": "APPLE:756711F9F7EA5ABAA930579790F34854",
            "score": 9.8,
            "description": "# About the security content of tvOS 18.2\n\nThis document describes the security content of tvOS 18.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## tvOS 18.2\n\n### AppleMobileFileIntegrity\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: A malicious app may be able to access private information\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54526: Mickey Jin (@patch1t), Arsenii Kostromin (0x3c3e)\n\n### AppleMobileFileIntegrity\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to access sensitive user data\n\nDescription: This issue was addressed with improved checks.\n\nCVE-2024-54527: Mickey Jin (@patch1t)\n\n### Crash Reporter\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to access sensitive user data\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-54513: an anonymous researcher\n\n### FontParser\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### ImageIO\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### Kernel\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### Kernel\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to leak sensitive kernel state\n\nDescription: A race condition was addressed with improved locking.\n\nCVE-2024-54510: Joseph Ravichandran (@0xjprx) of MIT CSAIL\n\n### libexpat\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### libxpc\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to break out of its sandbox\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54514: an anonymous researcher\n\n### libxpc\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: An app may be able to gain elevated privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-44225: \u98ce\u6c90\u4e91\u70df(@binary_fmyy)\n\n### SceneKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: Apple TV HD and Apple TV 4K (all models)\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### FaceTime\n\nWe would like to acknowledge \u6930\u6930 for their assistance.\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n\n### Swift\n\nWe would like to acknowledge Marc Schoenefeld, Dr. rer. nat. for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:756711F9F7EA5ABAA930579790F34854"
        },
        {
            "id": "APPLE:6CD282140CDEAF8489F8B548272C8004",
            "score": 9.8,
            "description": "# About the security content of macOS Sequoia 15.2\n\nThis document describes the security content of macOS Sequoia 15.2.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## macOS Sequoia 15.2\n\n### Apple Software Restore\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54477: Mickey Jin (@patch1t), Csaba Fitzl (@theevilbit) of Kandji\n\n### AppleGraphicsControl\n\nAvailable for: macOS Sequoia\n\nImpact: Parsing a maliciously crafted video file may lead to unexpected system termination\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44220: D4m0n\n\n### AppleMobileFileIntegrity\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to access private information\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54526: Mickey Jin (@patch1t), Arsenii Kostromin (0x3c3e)\n\n### AppleMobileFileIntegrity\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access sensitive user data\n\nDescription: This issue was addressed with improved checks.\n\nCVE-2024-54527: Mickey Jin (@patch1t)\n\n### AppleMobileFileIntegrity\n\nAvailable for: macOS Sequoia\n\nImpact: A local attacker may gain access to user's Keychain items\n\nDescription: This issue was addressed by enabling hardened runtime.\n\nCVE-2024-54490: Mickey Jin (@patch1t)\n\n### Audio\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to execute arbitrary code with kernel privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-54529: Dillon Franke working with Google Project Zero\n\n### Crash Reporter\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access sensitive user data\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-54513: an anonymous researcher\n\n### Crash Reporter\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access protected user data\n\nDescription: A logic issue was addressed with improved file handling.\n\nCVE-2024-44300: an anonymous researcher\n\n### DiskArbitration\n\nAvailable for: macOS Sequoia\n\nImpact: An encrypted volume may be accessed by a different user without prompting for the password\n\nDescription: An authorization issue was addressed with improved state management.\n\nCVE-2024-54466: Michael Cohen\n\n### Disk Utility\n\nAvailable for: macOS Sequoia\n\nImpact: Running a mount command may unexpectedly execute arbitrary code\n\nDescription: A path handling issue was addressed with improved validation.\n\nCVE-2024-54489: D\u2019Angelo Gonzalez of CrowdStrike\n\n### FontParser\n\nAvailable for: macOS Sequoia\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### Foundation\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to gain root privileges\n\nDescription: A logic issue was addressed with improved file handling.\n\nCVE-2024-44291: Arsenii Kostromin (0x3c3e)\n\n### ImageIO\n\nAvailable for: macOS Sequoia\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### IOMobileFrameBuffer\n\nAvailable for: macOS Sequoia\n\nImpact: An attacker may be able to cause unexpected system termination or arbitrary code execution in DCP firmware\n\nDescription: An out-of-bounds access issue was addressed with improved bounds checking.\n\nCVE-2024-54506: Ye Zhang (@VAR10CK) of Baidu Security\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to leak sensitive kernel state\n\nDescription: A race condition was addressed with improved locking.\n\nCVE-2024-54510: Joseph Ravichandran (@0xjprx) of MIT CSAIL\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to cause unexpected system termination or corrupt kernel memory\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44245: an anonymous researcher\n\n### Kernel\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to bypass kASLR\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-54531: Hyerean Jang, Taehun Kim, and Youngjoo Shin\n\n### LaunchServices\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to elevate privileges\n\nDescription: A logic issue was addressed with improved state management.\n\nCVE-2024-54465: an anonymous researcher\n\n### libexpat\n\nAvailable for: macOS Sequoia\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### libxpc\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to break out of its sandbox\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54514: an anonymous researcher\n\n### libxpc\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to gain elevated privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-44225: \u98ce\u6c90\u4e91\u70df(@binary_fmyy)\n\n### Logging\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious application may be able to determine a user's current location\n\nDescription: The issue was resolved by sanitizing logging\n\nCVE-2024-54491: Kirin (@Pwnrin)\n\n### MediaRemote\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: The issue was resolved by sanitizing logging.\n\nCVE-2024-54484: Meng Zhang (\u9cb8\u843d) of NorthSea\n\n### Notification Center\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: A privacy issue was addressed with improved private data redaction for log entries.\n\nCVE-2024-54504: \u795e\u7f5a(@Pwnrin)\n\n### PackageKit\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to access user-sensitive data\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54474: Mickey Jin (@patch1t)\n\nCVE-2024-54476: Mickey Jin (@patch1t), Bohdan Stasiuk (@Bohdan_Stasiuk)\n\n### Passwords\n\nAvailable for: macOS Sequoia\n\nImpact: An attacker in a privileged network position may be able to alter network traffic\n\nDescription: This issue was addressed by using HTTPS when sending information over the network.\n\nCVE-2024-54492: Talal Haj Bakry and Tommy Mysk of Mysk Inc. (@mysk_co)\n\n### Perl\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to modify protected parts of the file system\n\nDescription: A logic issue was addressed with improved state management.\n\nCVE-2023-32395: Arsenii Kostromin (0x3c3e)\n\n### Safari\n\nAvailable for: macOS Sequoia\n\nImpact: On a device with Private Relay enabled, adding a website to the Safari Reading List may reveal the originating IP address to the website\n\nDescription: The issue was addressed with improved routing of Safari-originated requests.\n\nCVE-2024-44246: Jacob Braun\n\n### SceneKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to gain root privileges\n\nDescription: A logic issue was addressed with improved restrictions.\n\nCVE-2024-54515: an anonymous researcher\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to overwrite arbitrary files\n\nDescription: A logic issue was addressed with improved restrictions.\n\nCVE-2024-54528: an anonymous researcher\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to access arbitrary files\n\nDescription: A logic issue was addressed with improved file handling.\n\nCVE-2024-54524: an anonymous researcher\n\n### SharedFileList\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to break out of its sandbox\n\nDescription: A path handling issue was addressed with improved validation.\n\nCVE-2024-54498: an anonymous researcher\n\n### Shortcuts\n\nAvailable for: macOS Sequoia\n\nImpact: Privacy indicators for microphone access may be attributed incorrectly\n\nDescription: This issue was addressed through improved state management.\n\nCVE-2024-54493: Yokesh Muthu K\n\n### StorageKit\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to modify protected parts of the file system\n\nDescription: A configuration issue was addressed with additional restrictions.\n\nCVE-2024-44243: Mickey Jin (@patch1t), Jonathan Bar Or (@yo_yo_yo_jbo) of Microsoft\n\n### StorageKit\n\nAvailable for: macOS Sequoia\n\nImpact: A malicious app may be able to gain root privileges\n\nDescription: A permissions issue was addressed with additional restrictions.\n\nCVE-2024-44224: Amy (@asentientbot)\n\n### Swift\n\nAvailable for: macOS Sequoia\n\nImpact: An app may be able to modify protected parts of the file system\n\nDescription: The issue was addressed with improved permissions logic.\n\nCVE-2024-54495: Claudio Bozzato and Francesco Benvenuto of Cisco Talos, Arsenii Kostromin (0x3c3e)\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\nWebKit Bugzilla: 281912\n\nCVE-2024-54502: Brendon Tiszka of Google Project Zero\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282180\n\nCVE-2024-54508: linjy of HKUS3Lab and chluo of WHUSecLab, Xiangwei Zhang of Tencent Security YUNDING LAB\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n### WebKit\n\nAvailable for: macOS Sequoia\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: The issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 277967\n\nCVE-2024-54534: Tashita Software Security\n\n## Additional recognition\n\n### ATS\n\nWe would like to acknowledge Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative for their assistance.\n\n### CUPS\n\nWe would like to acknowledge evilsocket for their assistance.\n\n### FaceTime\n\nWe would like to acknowledge \u6930\u6930 for their assistance.\n\n### FaceTime Foundation\n\nWe would like to acknowledge Joshua Pellecchia for their assistance.\n\n### Kernel\n\nWe would like to acknowledge Zweig of Kunlun Lab for their assistance.\n\n### NSOpenPanel\n\nWe would like to acknowledge Shaheen Fazim for their assistance.\n\n### Photos\n\nWe would like to acknowledge Chi Yuan Chang of ZUSO ART and taikosoup for their assistance.\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n\n### Safari\n\nWe would like to acknowledge Jaydev Ahire for their assistance.\n\n### Safari Private Browsing\n\nWe would like to acknowledge Richard Hyunho Im (@richeeta) with Route Zero Security for their assistance.\n\n### Sandbox\n\nWe would like to acknowledge IES Red Team of ByteDance for their assistance.\n\n### Swift\n\nWe would like to acknowledge Marc Schoenefeld, Dr. rer. nat. for their assistance.\n\n### WebKit\n\nWe would like to acknowledge Hafiizh for their assistance.\n\n### WindowServer\n\nWe would like to acknowledge Felix Kratz for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:6CD282140CDEAF8489F8B548272C8004"
        },
        {
            "id": "APPLE:1CF82AEAAA72943F9CDABCB142B8F589",
            "score": 8.8,
            "description": "# About the security content of iPadOS 17.7.3\n\nThis document describes the security content of iPadOS 17.7.3.\n\n## About Apple security updates\n\nFor our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.\n\nApple security documents reference vulnerabilities by CVE-ID when possible.\n\nFor more information about security, see the Apple Product Security page.\n\n## iPadOS 17.7.3\n\n### FontParser\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a maliciously crafted font may result in the disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54486: Hossein Lotfi (@hosselot) of Trend Micro Zero Day Initiative\n\n### ImageIO\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a maliciously crafted image may result in disclosure of process memory\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54500: Junsung Lee working with Trend Micro Zero Day Initiative\n\n### Kernel\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An attacker may be able to create a read-only memory mapping that can be written to\n\nDescription: A race condition was addressed with additional validation.\n\nCVE-2024-54494: sohybbyk\n\n### Kernel\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An app may be able to leak sensitive kernel state\n\nDescription: A race condition was addressed with improved locking.\n\nCVE-2024-54510: Joseph Ravichandran (@0xjprx) of MIT CSAIL\n\n### Kernel\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An app may be able to cause unexpected system termination or corrupt kernel memory\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44245: an anonymous researcher\n\n### libarchive\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a malicious crafted file may lead to a denial-of-service\n\nDescription: The issue was addressed with improved memory handling.\n\nCVE-2024-44201: Ben Roeder\n\n### libexpat\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: A remote attacker may cause an unexpected app termination or arbitrary code execution\n\nDescription: This is a vulnerability in open source code and Apple Software is among the affected projects. The CVE-ID was assigned by a third party. Learn more about the issue and CVE-ID at cve.org.\n\nCVE-2024-45490\n\n### libxpc\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An app may be able to gain elevated privileges\n\nDescription: A logic issue was addressed with improved checks.\n\nCVE-2024-44225: \u98ce\u6c90\u4e91\u70df(@binary_fmyy)\n\n### Passwords\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An attacker in a privileged network position may be able to alter network traffic\n\nDescription: This issue was addressed by using HTTPS when sending information over the network.\n\nCVE-2024-54492: Talal Haj Bakry and Tommy Mysk of Mysk Inc. (@mysk_co)\n\n### Safari\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: On a device with Private Relay enabled, adding a website to the Safari Reading List may reveal the originating IP address to the website\n\nDescription: The issue was addressed with improved routing of Safari-originated requests.\n\nCVE-2024-44246: Jacob Braun\n\n### SceneKit\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing a maliciously crafted file may lead to a denial of service\n\nDescription: The issue was addressed with improved checks.\n\nCVE-2024-54501: Michael DePlante (@izobashi) of Trend Micro's Zero Day Initiative\n\n### VoiceOver\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: An attacker with physical access to an iPadOS device may be able to view notification content from the lock screen\n\nDescription: The issue was addressed by adding additional logic.\n\nCVE-2024-54485: Abhay Kailasia (@abhay_kailasia) from C-DAC Thiruvananthapuram India\n\n### WebKit\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing maliciously crafted web content may lead to an unexpected process crash\n\nDescription: The issue was addressed with improved checks.\n\nWebKit Bugzilla: 278497\n\nCVE-2024-54479: Seunghyun Lee\n\n### WebKit\n\nAvailable for: iPad Pro 12.9-inch 2nd generation, iPad Pro 10.5-inch, and iPad 6th generation\n\nImpact: Processing maliciously crafted web content may lead to memory corruption\n\nDescription: A type confusion issue was addressed with improved memory handling.\n\nWebKit Bugzilla: 282661\n\nCVE-2024-54505: Gary Kwong\n\n## Additional recognition\n\n### Proximity\n\nWe would like to acknowledge Junming C. (@Chapoly1305) and Prof. Qiang Zeng of George Mason University for their assistance.\n",
            "url": "https://vulners.com/apple/APPLE:1CF82AEAAA72943F9CDABCB142B8F589"
        },
        {
            "id": "OSV:GHSA-W8XV-RWGF-4FWH",
            "score": 7.5,
            "description": "Swift ASN.1 can be caused to crash when parsing certain BER/DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructed or primitive forms, and will trigger a `preconditionFailure` if that constraint isn't met.\n\nImportantly, these constraints are actually required to be true in DER, but that correctness wasn't enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.\n\nThese crashes can be triggered when parsing any DER/BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER/DER data from unknown sources, e.g. when parsing TLS certificates.\n\nMany thanks to @baarde for reporting this issue and providing the fix.",
            "url": "https://vulners.com/osv/OSV:GHSA-W8XV-RWGF-4FWH"
        },
        {
            "id": "13DF026F-4A7C-5B1B-8E17-F9A817162F0D",
            "score": 7.0,
            "description": "# Pentagram-exploit-tester\nA test app to check if your device is...",
            "url": "https://vulners.com/githubexploit/13DF026F-4A7C-5B1B-8E17-F9A817162F0D"
        },
        {
            "id": "74BF8111-297B-5D0B-A024-A3D94B6B020D",
            "score": 7.0,
            "description": "# desc_race\niOS 15.1 kernel exploit POC f...",
            "url": "https://vulners.com/githubexploit/74BF8111-297B-5D0B-A024-A3D94B6B020D"
        },
        {
            "id": "46898856-FC78-5007-8483-5AB2AED8AF64",
            "score": 7.0,
            "description": "Proof-of-concept app to overwrite fonts on iOS using [CVE-2022-4...",
            "url": "https://vulners.com/githubexploit/46898856-FC78-5007-8483-5AB2AED8AF64"
        },
        {
            "id": "93E2D30A-F520-58CB-9C5E-D4D8D45BFFEA",
            "score": 7.0,
            "description": "Proof-of-concept app to overwrite fonts on iOS using [CVE-2022-4...",
            "url": "https://vulners.com/githubexploit/93E2D30A-F520-58CB-9C5E-D4D8D45BFFEA"
        },
        {
            "id": "E68FECB1-4516-529C-8A86-4EE26CE33120",
            "score": 7.0,
            "description": "# FileSwitcherX\n\niOS 14.0-15.7.1 & 16.0-16.1.2\n\n# Install\n- ...",
            "url": "https://vulners.com/githubexploit/E68FECB1-4516-529C-8A86-4EE26CE33120"
        },
        {
            "id": "GHSA-W8XV-RWGF-4FWH",
            "score": 7.5,
            "description": "Swift ASN.1 can be caused to crash when parsing certain BER/DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructed or primitive forms, and will trigger a `preconditionFailure` if that constraint isn't met.\n\nImportantly, these constraints are actually required to be true in DER, but that correctness wasn't enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.\n\nThese crashes can be triggered when parsing any DER/BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER/DER data from unknown sources, e.g. when parsing TLS certificates.\n\nMany thanks to @baarde for reporting this issue and providing the fix.",
            "url": "https://vulners.com/github/GHSA-W8XV-RWGF-4FWH"
        },
        {
            "id": "GITLAB-F0354834C4511495A2CA531093E65863",
            "score": 7.5,
            "description": "Swift ASN.1 can be caused to crash when parsing certain BER/DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructed or primitive forms, and will trigger a `preconditionFailure` if that constraint isn't met.\n\nImportantly, these constraints are actually required to be true in DER, but that correctness wasn't enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.\n\nThese crashes can be triggered when parsing any DER/BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER/DER data from unknown sources, e.g. when parsing TLS certificates.\n\nMany thanks to @baarde for reporting this issue and providing the fix.",
            "url": "https://vulners.com/gitlab/GITLAB-F0354834C4511495A2CA531093E65863"
        },
        {
            "id": "1E322FCF-0909-5726-BCB5-40DD2095C79C",
            "score": 7.0,
            "description": "# NoCameraSound\n\niOS 14.0-15.7.1 & 16.0-16.1.2\n\n\u3053\u308c\u306f\u3082\u3046\u4f7f\u7528\u3059\u308b\u3079\u304d\u3067\u306f\u3042\u308a\u307e...",
            "url": "https://vulners.com/githubexploit/1E322FCF-0909-5726-BCB5-40DD2095C79C"
        },
        {
            "id": "E7CA2B56-B67E-5211-A66D-32BAA0E8EAC9",
            "score": 7.0,
            "description": "# Mandela Rewritten\niOS customization app powered by CVE-202...",
            "url": "https://vulners.com/githubexploit/E7CA2B56-B67E-5211-A66D-32BAA0E8EAC9"
        },
        {
            "id": "DB2D679A-CE6D-525A-B27F-8228B8B81695",
            "score": 7.0,
            "description": "# DockTransparent\n\niOS 14 - 16.1.2\n\nReboot your ...",
            "url": "https://vulners.com/githubexploit/DB2D679A-CE6D-525A-B27F-8228B8B81695"
        },
        {
            "id": "A14195A6-6F37-5C85-BFA2-721CAF6DE922",
            "score": 7.0,
            "description": "# Warning! This is being phased out in favour of [Mandela Rewrit...",
            "url": "https://vulners.com/githubexploit/A14195A6-6F37-5C85-BFA2-721CAF6DE922"
        }
    ]
}
{
    "vendor": "apple",
    "product": "libnghttp2",
    "version": "1.63.0",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "libnghttp2",
    "version": "1.64.0",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "libnghttp2",
    "current_version": "1.63.0",
    "new_version": "1.64.0",
    "status": "pas s\u00fbr",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "libpq",
    "version": "16.4",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "libpq",
    "version": "17.2",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "libpq",
    "current_version": "16.4",
    "new_version": "17.2",
    "status": "pas s\u00fbr",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "libuv",
    "version": "1.49.2",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "libuv",
    "version": "1.50.0",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "libuv",
    "current_version": "1.49.2",
    "new_version": "1.50.0",
    "status": "pas s\u00fbr",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "mysql",
    "version": "9.0.1_4",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "mysql",
    "version": "9.2.0",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "mysql",
    "current_version": "9.0.1_4",
    "new_version": "9.2.0",
    "status": "pas s\u00fbr",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "node",
    "version": "22.10.0",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "node",
    "version": "23.6.1",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "node",
    "current_version": "22.10.0",
    "new_version": "23.6.1",
    "status": "pas s\u00fbr",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "oniguruma",
    "version": "6.9.9",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "oniguruma",
    "version": "6.9.10",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "oniguruma",
    "current_version": "6.9.9",
    "new_version": "6.9.10",
    "status": "pas s\u00fbr",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "postgresql@15",
    "version": "15.8_2",
    "cve_count": 20,
    "cve_details": [
        {
            "id": "OSV:CVE-2024-10979",
            "score": 8.8,
            "description": "Incorrect control of environment variables in PostgreSQL PL/Perl allows an unprivileged database user to change sensitive process environment variables (e.g. PATH).  That often suffices to enable arbitrary code execution, even if the attacker lacks a database server operating system user.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10979"
        },
        {
            "id": "OSV:CVE-2024-10977",
            "score": 3.1,
            "description": "Client use of server error message in PostgreSQL allows a server not trusted under current SSL or GSS settings to furnish arbitrary non-NUL bytes to the libpq application.  For example, a man-in-the-middle attacker could send a long error message that a human or screen-scraper user of psql mistakes for valid query results.  This is probably not a concern for clients where the user interface unambiguously indicates the boundary between one error message and other text.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10977"
        },
        {
            "id": "OSV:CVE-2024-10978",
            "score": 4.2,
            "description": "Incorrect privilege assignment in PostgreSQL allows a less-privileged application user to view or change different rows from those intended.  An attack requires the application to use SET ROLE, SET SESSION AUTHORIZATION, or an equivalent feature.  The problem arises when an application query uses parameters from the attacker or conveys query results to the attacker.  If that query reacts to current_setting('role') or the current user ID, it may modify or return data as though the session had not used SET ROLE or SET SESSION AUTHORIZATION.  The attacker does not control which incorrect user ID applies.  Query text from less-privileged sources is not a concern here, because SET ROLE and SET SESSION AUTHORIZATION are not sandboxes for unvetted queries.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10978"
        },
        {
            "id": "OSV:CVE-2024-10976",
            "score": 4.2,
            "description": "Incomplete tracking in PostgreSQL of tables with row security allows a reused query to view or change different rows from those intended.  CVE-2023-2455 and CVE-2016-2193 fixed most interaction between row security and user ID changes.  They missed cases where a subquery, WITH query, security invoker view, or SQL-language function references a table with a row-level security policy.  This has the same consequences as the two earlier CVEs.  That is to say, it leads to potentially incorrect policies being applied in cases where role-specific policies are used and a given query is planned under one role and then executed under other roles.  This scenario can happen under security definer functions or when a common user and query is planned initially and then re-used across multiple SET ROLEs.  Applying an incorrect policy may permit a user to complete otherwise-forbidden reads and modifications.  This affects only databases that have used CREATE POLICY to define a row security policy.  An attacker must tailor an attack to a particular application's pattern of query plan reuse, user ID changes, and role-specific row security policies.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10976"
        },
        {
            "id": "OSV:CVE-2024-7348",
            "score": 8.8,
            "description": "Time-of-check Time-of-use (TOCTOU) race condition in pg_dump in PostgreSQL allows an object creator to execute arbitrary SQL functions as the user running pg_dump, which is often a superuser. The attack involves replacing another relation type with a view or foreign table. The attack requires waiting for pg_dump to start, but winning the race condition is trivial if the attacker retains an open transaction. Versions before PostgreSQL 16.4, 15.8, 14.13, 13.16, and 12.20 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-7348"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10976",
            "score": 4.2,
            "description": "Incomplete tracking in PostgreSQL of tables with row security allows a reused query to view or change different rows from those intended. CVE-2023-2455 and CVE-2016-2193 fixed most interaction between row security and user ID changes.  They missed cases where a subquery, WITH query, security invoker view, or SQL-language function references a table with a row-level security policy.  This has the same consequences as the two earlier CVEs.  That is to say, it leads to potentially incorrect policies being applied in cases where role-specific policies are used and a given query is planned under one role and then executed under other roles.  This scenario can happen under security definer functions or when a common user and query is planned initially and then re-used across multiple SET ROLEs. Applying an incorrect policy may permit a user to complete otherwise-forbidden reads and modifications.  This affects only databases that have used CREATE POLICY to define a row security policy.  An attacker must tailor an attack to a particular application's pattern of query plan reuse, user ID changes, and role-specific row security policies.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10976"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-7348",
            "score": 8.8,
            "description": "Time-of-check Time-of-use (TOCTOU) race condition in pg_dump in PostgreSQL allows an object creator to execute arbitrary SQL functions as the user running pg_dump, which is often a superuser. The attack involves replacing another relation type with a view or foreign table. The attack requires waiting for pg_dump to start, but winning the race condition is trivial if the attacker retains an open transaction. Versions before PostgreSQL 16.4, 15.8, 14.13, 13.16, and 12.20 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-7348"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-7883",
            "score": 3.7,
            "description": "When using Arm Cortex-M Security Extensions (CMSE), Secure stack contents can be leaked to Non-secure state via floating-point registers when a Secure to Non-secure function call is made that returns a floating-point value and when this is the first use of floating-point since entering Secure state. This allows an attacker to read a limited quantity of Secure stack contents with an impact on confidentiality. This issue is specific to code generated using LLVM-based compilers.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-7883"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10978",
            "score": 4.2,
            "description": "Incorrect privilege assignment in PostgreSQL allows a less-privileged application user to view or change different rows from those intended.  An attack requires the application to use SET ROLE, SET SESSION AUTHORIZATION, or an equivalent feature.  The problem arises when an application query uses parameters from the attacker or conveys query results to the attacker.  If that query reacts to current_setting('role') or the current user ID, it may modify or return data as though the session had not used SET ROLE or SET SESSION AUTHORIZATION.  The attacker does not control which incorrect user ID applies.  Query text from less-privileged sources is not a concern here, because SET ROLE and SET SESSION AUTHORIZATION are not sandboxes for unvetted queries.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10978"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10979",
            "score": 8.8,
            "description": "Incorrect control of environment variables in PostgreSQL PL/Perl allows an unprivileged database user to change sensitive process environment variables (e.g. PATH).  That often suffices to enable arbitrary code execution, even if the attacker lacks a database server operating system user.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10979"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10977",
            "score": 3.1,
            "description": "Client use of server error message in PostgreSQL allows a server not trusted under current SSL or GSS settings to furnish arbitrary non-NUL bytes to the libpq application.  For example, a man-in-the-middle attacker could send a long error message that a human or screen-scraper user of psql mistakes for valid query results.  This is probably not a concern for clients where the user interface unambiguously indicates the boundary between one error message and other text.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10977"
        },
        {
            "id": "OSV:BIT-POSTGRESQL-2024-10979",
            "score": 8.8,
            "description": "Incorrect control of environment variables in PostgreSQL PL/Perl allows an unprivileged database user to change sensitive process environment variables (e.g. PATH).  That often suffices to enable arbitrary code execution, even if the attacker lacks a database server operating system user.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:BIT-POSTGRESQL-2024-10979"
        },
        {
            "id": "OSV:CVE-2024-7883",
            "score": 3.7,
            "description": "When using Arm Cortex-M Security Extensions (CMSE), Secure stack \ncontents can be leaked to Non-secure state via floating-point registers \nwhen a Secure to Non-secure function call is made that returns a \nfloating-point value and when this is the first use of floating-point \nsince entering Secure state. This allows an attacker to read a limited \nquantity of Secure stack contents with an impact on confidentiality. \nThis issue is specific to code generated using LLVM-based compilers.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-7883"
        },
        {
            "id": "APPLE:5AF45DC47815ABEE46EF25A46C7D084E",
            "score": 0.0,
            "description": "Apple recommends to install security update tvOS 18.2.1 on devices Apple TV HD and Apple TV 4K (all models)",
            "url": "https://vulners.com/apple/APPLE:5AF45DC47815ABEE46EF25A46C7D084E"
        },
        {
            "id": "APPLE:7A0F39796936B0FD4B519C79D4E1E6F9",
            "score": 0.0,
            "description": "Apple recommends to install security update iOS 18.2.1 and iPadOS 18.2.1 on devices iPhone XS and later, iPad Pro 13-inch, iPad Pro 12.9-inch 3rd generation and later, iPad Pro 11-inch 1st generation and later, iPad Air 3rd generation and later, iPad 7th generation and later, and iPad mini 5th generation and later",
            "url": "https://vulners.com/apple/APPLE:7A0F39796936B0FD4B519C79D4E1E6F9"
        },
        {
            "id": "OSV:RHSA-2023:4327",
            "score": 7.2,
            "description": "Bulletin has no description",
            "url": "https://vulners.com/osv/OSV:RHSA-2023:4327"
        },
        {
            "id": "OSV:RHSA-2023:5269",
            "score": 7.2,
            "description": "Bulletin has no description",
            "url": "https://vulners.com/osv/OSV:RHSA-2023:5269"
        },
        {
            "id": "RLSA-2024:10830",
            "score": 8.8,
            "description": "An update is available for pgaudit, postgresql, module.pgaudit, pg_repack, module.postgres-decoderbufs, module.pg_repack, postgres-decoderbufs, module.postgresql.\nThis update affects Rocky Linux 8.\nA Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE list\nPostgreSQL is an advanced object-relational database management system (DBMS).\n\nSecurity Fix(es):\n\n* postgresql: PostgreSQL SET ROLE, SET SESSION AUTHORIZATION reset to wrong user ID (CVE-2024-10978)\n\n* postgresql: PostgreSQL PL/Perl environment variable changes execute arbitrary code (CVE-2024-10979)\n\n* postgresql: PostgreSQL row security below e.g. subqueries disregards user ID changes (CVE-2024-10976)\n\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.",
            "url": "https://vulners.com/rocky/RLSA-2024:10830"
        },
        {
            "id": "OSV:DSA-5812-2",
            "score": 0.0,
            "description": "Bulletin has no description",
            "url": "https://vulners.com/osv/OSV:DSA-5812-2"
        },
        {
            "id": "RLSA-2024:10787",
            "score": 8.8,
            "description": "An update is available for module.pgaudit, module.postgres-decoderbufs, postgres-decoderbufs, pgaudit.\nThis update affects Rocky Linux 9.\nA Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE list\nPostgreSQL is an advanced object-relational database management system (DBMS).\n\nSecurity Fix(es):\n\n* postgresql: PostgreSQL SET ROLE, SET SESSION AUTHORIZATION reset to wrong user ID (CVE-2024-10978)\n\n* postgresql: PostgreSQL PL/Perl environment variable changes execute arbitrary code (CVE-2024-10979)\n\n* postgresql: PostgreSQL row security below e.g. subqueries disregards user ID changes (CVE-2024-10976)\n\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.",
            "url": "https://vulners.com/rocky/RLSA-2024:10787"
        }
    ]
}
{
    "vendor": "apple",
    "product": "postgresql@15",
    "version": "15.10",
    "cve_count": 20,
    "cve_details": [
        {
            "id": "OSV:CVE-2024-10979",
            "score": 8.8,
            "description": "Incorrect control of environment variables in PostgreSQL PL/Perl allows an unprivileged database user to change sensitive process environment variables (e.g. PATH).  That often suffices to enable arbitrary code execution, even if the attacker lacks a database server operating system user.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10979"
        },
        {
            "id": "OSV:CVE-2024-10977",
            "score": 3.1,
            "description": "Client use of server error message in PostgreSQL allows a server not trusted under current SSL or GSS settings to furnish arbitrary non-NUL bytes to the libpq application.  For example, a man-in-the-middle attacker could send a long error message that a human or screen-scraper user of psql mistakes for valid query results.  This is probably not a concern for clients where the user interface unambiguously indicates the boundary between one error message and other text.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10977"
        },
        {
            "id": "OSV:CVE-2024-10978",
            "score": 4.2,
            "description": "Incorrect privilege assignment in PostgreSQL allows a less-privileged application user to view or change different rows from those intended.  An attack requires the application to use SET ROLE, SET SESSION AUTHORIZATION, or an equivalent feature.  The problem arises when an application query uses parameters from the attacker or conveys query results to the attacker.  If that query reacts to current_setting('role') or the current user ID, it may modify or return data as though the session had not used SET ROLE or SET SESSION AUTHORIZATION.  The attacker does not control which incorrect user ID applies.  Query text from less-privileged sources is not a concern here, because SET ROLE and SET SESSION AUTHORIZATION are not sandboxes for unvetted queries.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10978"
        },
        {
            "id": "OSV:CVE-2024-10976",
            "score": 4.2,
            "description": "Incomplete tracking in PostgreSQL of tables with row security allows a reused query to view or change different rows from those intended.  CVE-2023-2455 and CVE-2016-2193 fixed most interaction between row security and user ID changes.  They missed cases where a subquery, WITH query, security invoker view, or SQL-language function references a table with a row-level security policy.  This has the same consequences as the two earlier CVEs.  That is to say, it leads to potentially incorrect policies being applied in cases where role-specific policies are used and a given query is planned under one role and then executed under other roles.  This scenario can happen under security definer functions or when a common user and query is planned initially and then re-used across multiple SET ROLEs.  Applying an incorrect policy may permit a user to complete otherwise-forbidden reads and modifications.  This affects only databases that have used CREATE POLICY to define a row security policy.  An attacker must tailor an attack to a particular application's pattern of query plan reuse, user ID changes, and role-specific row security policies.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10976"
        },
        {
            "id": "OSV:CVE-2024-7348",
            "score": 8.8,
            "description": "Time-of-check Time-of-use (TOCTOU) race condition in pg_dump in PostgreSQL allows an object creator to execute arbitrary SQL functions as the user running pg_dump, which is often a superuser. The attack involves replacing another relation type with a view or foreign table. The attack requires waiting for pg_dump to start, but winning the race condition is trivial if the attacker retains an open transaction. Versions before PostgreSQL 16.4, 15.8, 14.13, 13.16, and 12.20 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-7348"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10976",
            "score": 4.2,
            "description": "Incomplete tracking in PostgreSQL of tables with row security allows a reused query to view or change different rows from those intended. CVE-2023-2455 and CVE-2016-2193 fixed most interaction between row security and user ID changes.  They missed cases where a subquery, WITH query, security invoker view, or SQL-language function references a table with a row-level security policy.  This has the same consequences as the two earlier CVEs.  That is to say, it leads to potentially incorrect policies being applied in cases where role-specific policies are used and a given query is planned under one role and then executed under other roles.  This scenario can happen under security definer functions or when a common user and query is planned initially and then re-used across multiple SET ROLEs. Applying an incorrect policy may permit a user to complete otherwise-forbidden reads and modifications.  This affects only databases that have used CREATE POLICY to define a row security policy.  An attacker must tailor an attack to a particular application's pattern of query plan reuse, user ID changes, and role-specific row security policies.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10976"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-7348",
            "score": 8.8,
            "description": "Time-of-check Time-of-use (TOCTOU) race condition in pg_dump in PostgreSQL allows an object creator to execute arbitrary SQL functions as the user running pg_dump, which is often a superuser. The attack involves replacing another relation type with a view or foreign table. The attack requires waiting for pg_dump to start, but winning the race condition is trivial if the attacker retains an open transaction. Versions before PostgreSQL 16.4, 15.8, 14.13, 13.16, and 12.20 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-7348"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-7883",
            "score": 3.7,
            "description": "When using Arm Cortex-M Security Extensions (CMSE), Secure stack contents can be leaked to Non-secure state via floating-point registers when a Secure to Non-secure function call is made that returns a floating-point value and when this is the first use of floating-point since entering Secure state. This allows an attacker to read a limited quantity of Secure stack contents with an impact on confidentiality. This issue is specific to code generated using LLVM-based compilers.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-7883"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10978",
            "score": 4.2,
            "description": "Incorrect privilege assignment in PostgreSQL allows a less-privileged application user to view or change different rows from those intended.  An attack requires the application to use SET ROLE, SET SESSION AUTHORIZATION, or an equivalent feature.  The problem arises when an application query uses parameters from the attacker or conveys query results to the attacker.  If that query reacts to current_setting('role') or the current user ID, it may modify or return data as though the session had not used SET ROLE or SET SESSION AUTHORIZATION.  The attacker does not control which incorrect user ID applies.  Query text from less-privileged sources is not a concern here, because SET ROLE and SET SESSION AUTHORIZATION are not sandboxes for unvetted queries.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10978"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10979",
            "score": 8.8,
            "description": "Incorrect control of environment variables in PostgreSQL PL/Perl allows an unprivileged database user to change sensitive process environment variables (e.g. PATH).  That often suffices to enable arbitrary code execution, even if the attacker lacks a database server operating system user.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10979"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10977",
            "score": 3.1,
            "description": "Client use of server error message in PostgreSQL allows a server not trusted under current SSL or GSS settings to furnish arbitrary non-NUL bytes to the libpq application.  For example, a man-in-the-middle attacker could send a long error message that a human or screen-scraper user of psql mistakes for valid query results.  This is probably not a concern for clients where the user interface unambiguously indicates the boundary between one error message and other text.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10977"
        },
        {
            "id": "OSV:BIT-POSTGRESQL-2024-10979",
            "score": 8.8,
            "description": "Incorrect control of environment variables in PostgreSQL PL/Perl allows an unprivileged database user to change sensitive process environment variables (e.g. PATH).  That often suffices to enable arbitrary code execution, even if the attacker lacks a database server operating system user.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:BIT-POSTGRESQL-2024-10979"
        },
        {
            "id": "OSV:CVE-2024-7883",
            "score": 3.7,
            "description": "When using Arm Cortex-M Security Extensions (CMSE), Secure stack \ncontents can be leaked to Non-secure state via floating-point registers \nwhen a Secure to Non-secure function call is made that returns a \nfloating-point value and when this is the first use of floating-point \nsince entering Secure state. This allows an attacker to read a limited \nquantity of Secure stack contents with an impact on confidentiality. \nThis issue is specific to code generated using LLVM-based compilers.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-7883"
        },
        {
            "id": "APPLE:5AF45DC47815ABEE46EF25A46C7D084E",
            "score": 0.0,
            "description": "Apple recommends to install security update tvOS 18.2.1 on devices Apple TV HD and Apple TV 4K (all models)",
            "url": "https://vulners.com/apple/APPLE:5AF45DC47815ABEE46EF25A46C7D084E"
        },
        {
            "id": "APPLE:7A0F39796936B0FD4B519C79D4E1E6F9",
            "score": 0.0,
            "description": "Apple recommends to install security update iOS 18.2.1 and iPadOS 18.2.1 on devices iPhone XS and later, iPad Pro 13-inch, iPad Pro 12.9-inch 3rd generation and later, iPad Pro 11-inch 1st generation and later, iPad Air 3rd generation and later, iPad 7th generation and later, and iPad mini 5th generation and later",
            "url": "https://vulners.com/apple/APPLE:7A0F39796936B0FD4B519C79D4E1E6F9"
        },
        {
            "id": "OSV:RHSA-2023:4327",
            "score": 7.2,
            "description": "Bulletin has no description",
            "url": "https://vulners.com/osv/OSV:RHSA-2023:4327"
        },
        {
            "id": "OSV:RHSA-2023:5269",
            "score": 7.2,
            "description": "Bulletin has no description",
            "url": "https://vulners.com/osv/OSV:RHSA-2023:5269"
        },
        {
            "id": "RLSA-2024:10830",
            "score": 8.8,
            "description": "An update is available for pgaudit, postgresql, module.pgaudit, pg_repack, module.postgres-decoderbufs, module.pg_repack, postgres-decoderbufs, module.postgresql.\nThis update affects Rocky Linux 8.\nA Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE list\nPostgreSQL is an advanced object-relational database management system (DBMS).\n\nSecurity Fix(es):\n\n* postgresql: PostgreSQL SET ROLE, SET SESSION AUTHORIZATION reset to wrong user ID (CVE-2024-10978)\n\n* postgresql: PostgreSQL PL/Perl environment variable changes execute arbitrary code (CVE-2024-10979)\n\n* postgresql: PostgreSQL row security below e.g. subqueries disregards user ID changes (CVE-2024-10976)\n\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.",
            "url": "https://vulners.com/rocky/RLSA-2024:10830"
        },
        {
            "id": "OSV:DSA-5812-2",
            "score": 0.0,
            "description": "Bulletin has no description",
            "url": "https://vulners.com/osv/OSV:DSA-5812-2"
        },
        {
            "id": "RLSA-2024:10787",
            "score": 8.8,
            "description": "An update is available for module.pgaudit, module.postgres-decoderbufs, postgres-decoderbufs, pgaudit.\nThis update affects Rocky Linux 9.\nA Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE list\nPostgreSQL is an advanced object-relational database management system (DBMS).\n\nSecurity Fix(es):\n\n* postgresql: PostgreSQL SET ROLE, SET SESSION AUTHORIZATION reset to wrong user ID (CVE-2024-10978)\n\n* postgresql: PostgreSQL PL/Perl environment variable changes execute arbitrary code (CVE-2024-10979)\n\n* postgresql: PostgreSQL row security below e.g. subqueries disregards user ID changes (CVE-2024-10976)\n\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.",
            "url": "https://vulners.com/rocky/RLSA-2024:10787"
        }
    ]
}
{
    "vendor": "apple",
    "product": "postgresql@15",
    "current_version": "15.8_2",
    "new_version": "15.10",
    "status": "pas s\u00fbr",
    "cve_current": [
        {
            "id": "OSV:CVE-2024-10979",
            "score": 8.8,
            "description": "Incorrect control of environment variables in PostgreSQL PL/Perl allows an unprivileged database user to change sensitive process environment variables (e.g. PATH).  That often suffices to enable arbitrary code execution, even if the attacker lacks a database server operating system user.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10979"
        },
        {
            "id": "OSV:CVE-2024-10977",
            "score": 3.1,
            "description": "Client use of server error message in PostgreSQL allows a server not trusted under current SSL or GSS settings to furnish arbitrary non-NUL bytes to the libpq application.  For example, a man-in-the-middle attacker could send a long error message that a human or screen-scraper user of psql mistakes for valid query results.  This is probably not a concern for clients where the user interface unambiguously indicates the boundary between one error message and other text.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10977"
        },
        {
            "id": "OSV:CVE-2024-10978",
            "score": 4.2,
            "description": "Incorrect privilege assignment in PostgreSQL allows a less-privileged application user to view or change different rows from those intended.  An attack requires the application to use SET ROLE, SET SESSION AUTHORIZATION, or an equivalent feature.  The problem arises when an application query uses parameters from the attacker or conveys query results to the attacker.  If that query reacts to current_setting('role') or the current user ID, it may modify or return data as though the session had not used SET ROLE or SET SESSION AUTHORIZATION.  The attacker does not control which incorrect user ID applies.  Query text from less-privileged sources is not a concern here, because SET ROLE and SET SESSION AUTHORIZATION are not sandboxes for unvetted queries.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10978"
        },
        {
            "id": "OSV:CVE-2024-10976",
            "score": 4.2,
            "description": "Incomplete tracking in PostgreSQL of tables with row security allows a reused query to view or change different rows from those intended.  CVE-2023-2455 and CVE-2016-2193 fixed most interaction between row security and user ID changes.  They missed cases where a subquery, WITH query, security invoker view, or SQL-language function references a table with a row-level security policy.  This has the same consequences as the two earlier CVEs.  That is to say, it leads to potentially incorrect policies being applied in cases where role-specific policies are used and a given query is planned under one role and then executed under other roles.  This scenario can happen under security definer functions or when a common user and query is planned initially and then re-used across multiple SET ROLEs.  Applying an incorrect policy may permit a user to complete otherwise-forbidden reads and modifications.  This affects only databases that have used CREATE POLICY to define a row security policy.  An attacker must tailor an attack to a particular application's pattern of query plan reuse, user ID changes, and role-specific row security policies.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10976"
        },
        {
            "id": "OSV:CVE-2024-7348",
            "score": 8.8,
            "description": "Time-of-check Time-of-use (TOCTOU) race condition in pg_dump in PostgreSQL allows an object creator to execute arbitrary SQL functions as the user running pg_dump, which is often a superuser. The attack involves replacing another relation type with a view or foreign table. The attack requires waiting for pg_dump to start, but winning the race condition is trivial if the attacker retains an open transaction. Versions before PostgreSQL 16.4, 15.8, 14.13, 13.16, and 12.20 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-7348"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10976",
            "score": 4.2,
            "description": "Incomplete tracking in PostgreSQL of tables with row security allows a reused query to view or change different rows from those intended. CVE-2023-2455 and CVE-2016-2193 fixed most interaction between row security and user ID changes.  They missed cases where a subquery, WITH query, security invoker view, or SQL-language function references a table with a row-level security policy.  This has the same consequences as the two earlier CVEs.  That is to say, it leads to potentially incorrect policies being applied in cases where role-specific policies are used and a given query is planned under one role and then executed under other roles.  This scenario can happen under security definer functions or when a common user and query is planned initially and then re-used across multiple SET ROLEs. Applying an incorrect policy may permit a user to complete otherwise-forbidden reads and modifications.  This affects only databases that have used CREATE POLICY to define a row security policy.  An attacker must tailor an attack to a particular application's pattern of query plan reuse, user ID changes, and role-specific row security policies.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10976"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-7348",
            "score": 8.8,
            "description": "Time-of-check Time-of-use (TOCTOU) race condition in pg_dump in PostgreSQL allows an object creator to execute arbitrary SQL functions as the user running pg_dump, which is often a superuser. The attack involves replacing another relation type with a view or foreign table. The attack requires waiting for pg_dump to start, but winning the race condition is trivial if the attacker retains an open transaction. Versions before PostgreSQL 16.4, 15.8, 14.13, 13.16, and 12.20 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-7348"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-7883",
            "score": 3.7,
            "description": "When using Arm Cortex-M Security Extensions (CMSE), Secure stack contents can be leaked to Non-secure state via floating-point registers when a Secure to Non-secure function call is made that returns a floating-point value and when this is the first use of floating-point since entering Secure state. This allows an attacker to read a limited quantity of Secure stack contents with an impact on confidentiality. This issue is specific to code generated using LLVM-based compilers.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-7883"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10978",
            "score": 4.2,
            "description": "Incorrect privilege assignment in PostgreSQL allows a less-privileged application user to view or change different rows from those intended.  An attack requires the application to use SET ROLE, SET SESSION AUTHORIZATION, or an equivalent feature.  The problem arises when an application query uses parameters from the attacker or conveys query results to the attacker.  If that query reacts to current_setting('role') or the current user ID, it may modify or return data as though the session had not used SET ROLE or SET SESSION AUTHORIZATION.  The attacker does not control which incorrect user ID applies.  Query text from less-privileged sources is not a concern here, because SET ROLE and SET SESSION AUTHORIZATION are not sandboxes for unvetted queries.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10978"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10979",
            "score": 8.8,
            "description": "Incorrect control of environment variables in PostgreSQL PL/Perl allows an unprivileged database user to change sensitive process environment variables (e.g. PATH).  That often suffices to enable arbitrary code execution, even if the attacker lacks a database server operating system user.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10979"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10977",
            "score": 3.1,
            "description": "Client use of server error message in PostgreSQL allows a server not trusted under current SSL or GSS settings to furnish arbitrary non-NUL bytes to the libpq application.  For example, a man-in-the-middle attacker could send a long error message that a human or screen-scraper user of psql mistakes for valid query results.  This is probably not a concern for clients where the user interface unambiguously indicates the boundary between one error message and other text.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10977"
        },
        {
            "id": "OSV:BIT-POSTGRESQL-2024-10979",
            "score": 8.8,
            "description": "Incorrect control of environment variables in PostgreSQL PL/Perl allows an unprivileged database user to change sensitive process environment variables (e.g. PATH).  That often suffices to enable arbitrary code execution, even if the attacker lacks a database server operating system user.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:BIT-POSTGRESQL-2024-10979"
        },
        {
            "id": "OSV:CVE-2024-7883",
            "score": 3.7,
            "description": "When using Arm Cortex-M Security Extensions (CMSE), Secure stack \ncontents can be leaked to Non-secure state via floating-point registers \nwhen a Secure to Non-secure function call is made that returns a \nfloating-point value and when this is the first use of floating-point \nsince entering Secure state. This allows an attacker to read a limited \nquantity of Secure stack contents with an impact on confidentiality. \nThis issue is specific to code generated using LLVM-based compilers.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-7883"
        },
        {
            "id": "APPLE:5AF45DC47815ABEE46EF25A46C7D084E",
            "score": 0.0,
            "description": "Apple recommends to install security update tvOS 18.2.1 on devices Apple TV HD and Apple TV 4K (all models)",
            "url": "https://vulners.com/apple/APPLE:5AF45DC47815ABEE46EF25A46C7D084E"
        },
        {
            "id": "APPLE:7A0F39796936B0FD4B519C79D4E1E6F9",
            "score": 0.0,
            "description": "Apple recommends to install security update iOS 18.2.1 and iPadOS 18.2.1 on devices iPhone XS and later, iPad Pro 13-inch, iPad Pro 12.9-inch 3rd generation and later, iPad Pro 11-inch 1st generation and later, iPad Air 3rd generation and later, iPad 7th generation and later, and iPad mini 5th generation and later",
            "url": "https://vulners.com/apple/APPLE:7A0F39796936B0FD4B519C79D4E1E6F9"
        },
        {
            "id": "OSV:RHSA-2023:4327",
            "score": 7.2,
            "description": "Bulletin has no description",
            "url": "https://vulners.com/osv/OSV:RHSA-2023:4327"
        },
        {
            "id": "OSV:RHSA-2023:5269",
            "score": 7.2,
            "description": "Bulletin has no description",
            "url": "https://vulners.com/osv/OSV:RHSA-2023:5269"
        },
        {
            "id": "RLSA-2024:10830",
            "score": 8.8,
            "description": "An update is available for pgaudit, postgresql, module.pgaudit, pg_repack, module.postgres-decoderbufs, module.pg_repack, postgres-decoderbufs, module.postgresql.\nThis update affects Rocky Linux 8.\nA Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE list\nPostgreSQL is an advanced object-relational database management system (DBMS).\n\nSecurity Fix(es):\n\n* postgresql: PostgreSQL SET ROLE, SET SESSION AUTHORIZATION reset to wrong user ID (CVE-2024-10978)\n\n* postgresql: PostgreSQL PL/Perl environment variable changes execute arbitrary code (CVE-2024-10979)\n\n* postgresql: PostgreSQL row security below e.g. subqueries disregards user ID changes (CVE-2024-10976)\n\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.",
            "url": "https://vulners.com/rocky/RLSA-2024:10830"
        },
        {
            "id": "OSV:DSA-5812-2",
            "score": 0.0,
            "description": "Bulletin has no description",
            "url": "https://vulners.com/osv/OSV:DSA-5812-2"
        },
        {
            "id": "RLSA-2024:10787",
            "score": 8.8,
            "description": "An update is available for module.pgaudit, module.postgres-decoderbufs, postgres-decoderbufs, pgaudit.\nThis update affects Rocky Linux 9.\nA Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE list\nPostgreSQL is an advanced object-relational database management system (DBMS).\n\nSecurity Fix(es):\n\n* postgresql: PostgreSQL SET ROLE, SET SESSION AUTHORIZATION reset to wrong user ID (CVE-2024-10978)\n\n* postgresql: PostgreSQL PL/Perl environment variable changes execute arbitrary code (CVE-2024-10979)\n\n* postgresql: PostgreSQL row security below e.g. subqueries disregards user ID changes (CVE-2024-10976)\n\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.",
            "url": "https://vulners.com/rocky/RLSA-2024:10787"
        }
    ],
    "cve_new": [
        {
            "id": "OSV:CVE-2024-10979",
            "score": 8.8,
            "description": "Incorrect control of environment variables in PostgreSQL PL/Perl allows an unprivileged database user to change sensitive process environment variables (e.g. PATH).  That often suffices to enable arbitrary code execution, even if the attacker lacks a database server operating system user.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10979"
        },
        {
            "id": "OSV:CVE-2024-10977",
            "score": 3.1,
            "description": "Client use of server error message in PostgreSQL allows a server not trusted under current SSL or GSS settings to furnish arbitrary non-NUL bytes to the libpq application.  For example, a man-in-the-middle attacker could send a long error message that a human or screen-scraper user of psql mistakes for valid query results.  This is probably not a concern for clients where the user interface unambiguously indicates the boundary between one error message and other text.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10977"
        },
        {
            "id": "OSV:CVE-2024-10978",
            "score": 4.2,
            "description": "Incorrect privilege assignment in PostgreSQL allows a less-privileged application user to view or change different rows from those intended.  An attack requires the application to use SET ROLE, SET SESSION AUTHORIZATION, or an equivalent feature.  The problem arises when an application query uses parameters from the attacker or conveys query results to the attacker.  If that query reacts to current_setting('role') or the current user ID, it may modify or return data as though the session had not used SET ROLE or SET SESSION AUTHORIZATION.  The attacker does not control which incorrect user ID applies.  Query text from less-privileged sources is not a concern here, because SET ROLE and SET SESSION AUTHORIZATION are not sandboxes for unvetted queries.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10978"
        },
        {
            "id": "OSV:CVE-2024-10976",
            "score": 4.2,
            "description": "Incomplete tracking in PostgreSQL of tables with row security allows a reused query to view or change different rows from those intended.  CVE-2023-2455 and CVE-2016-2193 fixed most interaction between row security and user ID changes.  They missed cases where a subquery, WITH query, security invoker view, or SQL-language function references a table with a row-level security policy.  This has the same consequences as the two earlier CVEs.  That is to say, it leads to potentially incorrect policies being applied in cases where role-specific policies are used and a given query is planned under one role and then executed under other roles.  This scenario can happen under security definer functions or when a common user and query is planned initially and then re-used across multiple SET ROLEs.  Applying an incorrect policy may permit a user to complete otherwise-forbidden reads and modifications.  This affects only databases that have used CREATE POLICY to define a row security policy.  An attacker must tailor an attack to a particular application's pattern of query plan reuse, user ID changes, and role-specific row security policies.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-10976"
        },
        {
            "id": "OSV:CVE-2024-7348",
            "score": 8.8,
            "description": "Time-of-check Time-of-use (TOCTOU) race condition in pg_dump in PostgreSQL allows an object creator to execute arbitrary SQL functions as the user running pg_dump, which is often a superuser. The attack involves replacing another relation type with a view or foreign table. The attack requires waiting for pg_dump to start, but winning the race condition is trivial if the attacker retains an open transaction. Versions before PostgreSQL 16.4, 15.8, 14.13, 13.16, and 12.20 are affected.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-7348"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10976",
            "score": 4.2,
            "description": "Incomplete tracking in PostgreSQL of tables with row security allows a reused query to view or change different rows from those intended. CVE-2023-2455 and CVE-2016-2193 fixed most interaction between row security and user ID changes.  They missed cases where a subquery, WITH query, security invoker view, or SQL-language function references a table with a row-level security policy.  This has the same consequences as the two earlier CVEs.  That is to say, it leads to potentially incorrect policies being applied in cases where role-specific policies are used and a given query is planned under one role and then executed under other roles.  This scenario can happen under security definer functions or when a common user and query is planned initially and then re-used across multiple SET ROLEs. Applying an incorrect policy may permit a user to complete otherwise-forbidden reads and modifications.  This affects only databases that have used CREATE POLICY to define a row security policy.  An attacker must tailor an attack to a particular application's pattern of query plan reuse, user ID changes, and role-specific row security policies.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10976"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-7348",
            "score": 8.8,
            "description": "Time-of-check Time-of-use (TOCTOU) race condition in pg_dump in PostgreSQL allows an object creator to execute arbitrary SQL functions as the user running pg_dump, which is often a superuser. The attack involves replacing another relation type with a view or foreign table. The attack requires waiting for pg_dump to start, but winning the race condition is trivial if the attacker retains an open transaction. Versions before PostgreSQL 16.4, 15.8, 14.13, 13.16, and 12.20 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-7348"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-7883",
            "score": 3.7,
            "description": "When using Arm Cortex-M Security Extensions (CMSE), Secure stack contents can be leaked to Non-secure state via floating-point registers when a Secure to Non-secure function call is made that returns a floating-point value and when this is the first use of floating-point since entering Secure state. This allows an attacker to read a limited quantity of Secure stack contents with an impact on confidentiality. This issue is specific to code generated using LLVM-based compilers.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-7883"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10978",
            "score": 4.2,
            "description": "Incorrect privilege assignment in PostgreSQL allows a less-privileged application user to view or change different rows from those intended.  An attack requires the application to use SET ROLE, SET SESSION AUTHORIZATION, or an equivalent feature.  The problem arises when an application query uses parameters from the attacker or conveys query results to the attacker.  If that query reacts to current_setting('role') or the current user ID, it may modify or return data as though the session had not used SET ROLE or SET SESSION AUTHORIZATION.  The attacker does not control which incorrect user ID applies.  Query text from less-privileged sources is not a concern here, because SET ROLE and SET SESSION AUTHORIZATION are not sandboxes for unvetted queries.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10978"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10979",
            "score": 8.8,
            "description": "Incorrect control of environment variables in PostgreSQL PL/Perl allows an unprivileged database user to change sensitive process environment variables (e.g. PATH).  That often suffices to enable arbitrary code execution, even if the attacker lacks a database server operating system user.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10979"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-10977",
            "score": 3.1,
            "description": "Client use of server error message in PostgreSQL allows a server not trusted under current SSL or GSS settings to furnish arbitrary non-NUL bytes to the libpq application.  For example, a man-in-the-middle attacker could send a long error message that a human or screen-scraper user of psql mistakes for valid query results.  This is probably not a concern for clients where the user interface unambiguously indicates the boundary between one error message and other text.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-10977"
        },
        {
            "id": "OSV:BIT-POSTGRESQL-2024-10979",
            "score": 8.8,
            "description": "Incorrect control of environment variables in PostgreSQL PL/Perl allows an unprivileged database user to change sensitive process environment variables (e.g. PATH).  That often suffices to enable arbitrary code execution, even if the attacker lacks a database server operating system user.  Versions before PostgreSQL 17.1, 16.5, 15.9, 14.14, 13.17, and 12.21 are affected.",
            "url": "https://vulners.com/osv/OSV:BIT-POSTGRESQL-2024-10979"
        },
        {
            "id": "OSV:CVE-2024-7883",
            "score": 3.7,
            "description": "When using Arm Cortex-M Security Extensions (CMSE), Secure stack \ncontents can be leaked to Non-secure state via floating-point registers \nwhen a Secure to Non-secure function call is made that returns a \nfloating-point value and when this is the first use of floating-point \nsince entering Secure state. This allows an attacker to read a limited \nquantity of Secure stack contents with an impact on confidentiality. \nThis issue is specific to code generated using LLVM-based compilers.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-7883"
        },
        {
            "id": "APPLE:5AF45DC47815ABEE46EF25A46C7D084E",
            "score": 0.0,
            "description": "Apple recommends to install security update tvOS 18.2.1 on devices Apple TV HD and Apple TV 4K (all models)",
            "url": "https://vulners.com/apple/APPLE:5AF45DC47815ABEE46EF25A46C7D084E"
        },
        {
            "id": "APPLE:7A0F39796936B0FD4B519C79D4E1E6F9",
            "score": 0.0,
            "description": "Apple recommends to install security update iOS 18.2.1 and iPadOS 18.2.1 on devices iPhone XS and later, iPad Pro 13-inch, iPad Pro 12.9-inch 3rd generation and later, iPad Pro 11-inch 1st generation and later, iPad Air 3rd generation and later, iPad 7th generation and later, and iPad mini 5th generation and later",
            "url": "https://vulners.com/apple/APPLE:7A0F39796936B0FD4B519C79D4E1E6F9"
        },
        {
            "id": "OSV:RHSA-2023:4327",
            "score": 7.2,
            "description": "Bulletin has no description",
            "url": "https://vulners.com/osv/OSV:RHSA-2023:4327"
        },
        {
            "id": "OSV:RHSA-2023:5269",
            "score": 7.2,
            "description": "Bulletin has no description",
            "url": "https://vulners.com/osv/OSV:RHSA-2023:5269"
        },
        {
            "id": "RLSA-2024:10830",
            "score": 8.8,
            "description": "An update is available for pgaudit, postgresql, module.pgaudit, pg_repack, module.postgres-decoderbufs, module.pg_repack, postgres-decoderbufs, module.postgresql.\nThis update affects Rocky Linux 8.\nA Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE list\nPostgreSQL is an advanced object-relational database management system (DBMS).\n\nSecurity Fix(es):\n\n* postgresql: PostgreSQL SET ROLE, SET SESSION AUTHORIZATION reset to wrong user ID (CVE-2024-10978)\n\n* postgresql: PostgreSQL PL/Perl environment variable changes execute arbitrary code (CVE-2024-10979)\n\n* postgresql: PostgreSQL row security below e.g. subqueries disregards user ID changes (CVE-2024-10976)\n\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.",
            "url": "https://vulners.com/rocky/RLSA-2024:10830"
        },
        {
            "id": "OSV:DSA-5812-2",
            "score": 0.0,
            "description": "Bulletin has no description",
            "url": "https://vulners.com/osv/OSV:DSA-5812-2"
        },
        {
            "id": "RLSA-2024:10787",
            "score": 8.8,
            "description": "An update is available for module.pgaudit, module.postgres-decoderbufs, postgres-decoderbufs, pgaudit.\nThis update affects Rocky Linux 9.\nA Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE list\nPostgreSQL is an advanced object-relational database management system (DBMS).\n\nSecurity Fix(es):\n\n* postgresql: PostgreSQL SET ROLE, SET SESSION AUTHORIZATION reset to wrong user ID (CVE-2024-10978)\n\n* postgresql: PostgreSQL PL/Perl environment variable changes execute arbitrary code (CVE-2024-10979)\n\n* postgresql: PostgreSQL row security below e.g. subqueries disregards user ID changes (CVE-2024-10976)\n\nFor more details about the security issue(s), including the impact, a CVSS score, acknowledgments, and other related information, refer to the CVE page(s) listed in the References section.",
            "url": "https://vulners.com/rocky/RLSA-2024:10787"
        }
    ]
}
{
    "vendor": "apple",
    "product": "python-tk@3.13",
    "version": "3.13.0",
    "cve_count": 20,
    "cve_details": [
        {
            "id": "OSV:CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-56374"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-56374"
        },
        {
            "id": "OSV:GHSA-5VVG-PVHP-HV2M",
            "score": 5.5,
            "description": "### Issue\nSnowflake recently learned about and remediated a set of vulnerabilities in the Snowflake Connector for Python. Under specific conditions, certain users credentials (or portions of those credentials) were logged locally by the Connector to the users own systems. The credentials were not logged by Snowflake.\n\nThese vulnerabilities affect versions up to and including 3.12.2. Snowflake fixed the issue in version 3.12.3.\n\n### Vulnerability Details\nWhen the logging level was set by the user to DEBUG, the Connector could have logged Duo passcodes (when specified via the \u201cpasscode\u201d parameter) and Azure SAS tokens. Additionally, the [SecretDetector](https://docs.snowflake.com/en/developer-guide/python-connector/python-connector-example#logging) logging formatter, if enabled, contained bugs which caused it to not fully redact JWT tokens and certain private key formats.\n\n### Solution\nSnowflake released version 3.12.3 of the Snowflake Connector for Python, which fixes these issues. We recommend users upgrade to version 3.12.3 and review their logs for any potentially sensitive information that may have been captured.\n\n### Additional Information\nIf you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https://hackerone.com/snowflake?type=team).",
            "url": "https://vulners.com/osv/OSV:GHSA-5VVG-PVHP-HV2M"
        },
        {
            "id": "OSV:CVE-2024-53899",
            "score": 5.3,
            "description": "virtualenv before 20.26.6 allows command injection through the activation scripts for a virtual environment. Magic template strings are not quoted correctly when replacing. NOTE: this is not the same as CVE-2024-9287.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53899"
        },
        {
            "id": "OSV:CVE-2024-40647",
            "score": 5.3,
            "description": "sentry-sdk is the official Python SDK for Sentry.io. A bug in Sentry's Python SDK < 2.8.0 allows the environment variables to be passed to subprocesses despite the `env={}` setting. In Python's `subprocess` calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use `env` argument in `subprocess` calls. Due to the bug in Sentry SDK, with the Stdlib integration enabled (which is enabled by default), this expectation is not fulfilled, and all environment variables are being passed to subprocesses instead. The issue has been patched in pull request #3251 and is included in sentry-sdk==2.8.0. We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, you can disable all default integrations.\n",
            "url": "https://vulners.com/osv/OSV:CVE-2024-40647"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-10735",
            "score": 7.5,
            "description": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-10735"
        },
        {
            "id": "OSV:CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-38875"
        },
        {
            "id": "OSV:CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39329"
        },
        {
            "id": "OSV:CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39330"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-15523",
            "score": 7.8,
            "description": "In Python 3.6 through 3.6.10, 3.7 through 3.7.8, 3.8 through 3.8.4rc1, and 3.9 through 3.9.0b4 on Windows, a Trojan horse python3.dll might be used in cases where CPython is embedded in a native application. This occurs because python3X.dll may use an invalid search path for python3.dll loading (after Py_SetPath has been used). NOTE: this issue CANNOT occur when using python.exe from a standard (non-embedded) Python installation on Windows.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-15523"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-28861",
            "score": 7.4,
            "description": "Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-28861"
        },
        {
            "id": "OSV:CVE-2024-55655",
            "score": 2.7,
            "description": "sigstore-python is a Python tool for generating and verifying Sigstore signatures. Versions of sigstore-python newer than 2.0.0 but prior to 3.6.0 perform insufficient validation of the \"integration time\" present in \"v2\" and \"v3\" bundles during the verification flow: the \"integration time\" is verified *if* a source of signed time (such as an inclusion promise) is present, but is otherwise trusted if no source of signed time is present. This does not affect \"v1\" bundles, as the \"v1\" bundle format always requires an inclusion promise.\n\nSigstore uses signed time to support verification of signatures made against short-lived signing keys. The impact and severity of this weakness is *low*, as Sigstore contains multiple other enforcing components that prevent an attacker who modifies the integration timestamp within a bundle from impersonating a valid signature. In particular, an attacker who modifies the integration timestamp can induce a Denial of Service, but in no different manner than already possible with bundle access (e.g. modifying the signature itself such that it fails to verify). Separately, an attacker could upload a *new* entry to the transparency service, and substitute their new entry's time. However, this would still be rejected at validation time, as the new entry's (valid) signed time would be outside the validity window of the original signing certificate and would nonetheless render the attacker auditable.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-55655"
        },
        {
            "id": "OSV:CVE-2024-53908",
            "score": 9.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. Direct usage of the django.db.models.fields.json.HasKey lookup, when an Oracle database is used, is subject to SQL injection if untrusted data is used as an lhs value. (Applications that use the jsonfield.has_key lookup via __ are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53908"
        },
        {
            "id": "OSV:CVE-2024-53907",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. The strip_tags() method and striptags template filter are subject to a potential denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53907"
        },
        {
            "id": "OSV:CVE-2024-39614",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. get_supported_language_variant() was subject to a potential denial-of-service attack when used with very long strings containing specific characters.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39614"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-3426",
            "score": 5.7,
            "description": "There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-3426"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-45231",
            "score": 5.3,
            "description": "An issue was discovered in Django v5.1.1, v5.0.9, and v4.2.16. The django.contrib.auth.forms.PasswordResetForm class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-45231"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39330"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39329"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-38875"
        }
    ]
}
{
    "vendor": "apple",
    "product": "python-tk@3.13",
    "version": "3.13.1",
    "cve_count": 20,
    "cve_details": [
        {
            "id": "OSV:CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-56374"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-56374"
        },
        {
            "id": "OSV:GHSA-5VVG-PVHP-HV2M",
            "score": 5.5,
            "description": "### Issue\nSnowflake recently learned about and remediated a set of vulnerabilities in the Snowflake Connector for Python. Under specific conditions, certain users credentials (or portions of those credentials) were logged locally by the Connector to the users own systems. The credentials were not logged by Snowflake.\n\nThese vulnerabilities affect versions up to and including 3.12.2. Snowflake fixed the issue in version 3.12.3.\n\n### Vulnerability Details\nWhen the logging level was set by the user to DEBUG, the Connector could have logged Duo passcodes (when specified via the \u201cpasscode\u201d parameter) and Azure SAS tokens. Additionally, the [SecretDetector](https://docs.snowflake.com/en/developer-guide/python-connector/python-connector-example#logging) logging formatter, if enabled, contained bugs which caused it to not fully redact JWT tokens and certain private key formats.\n\n### Solution\nSnowflake released version 3.12.3 of the Snowflake Connector for Python, which fixes these issues. We recommend users upgrade to version 3.12.3 and review their logs for any potentially sensitive information that may have been captured.\n\n### Additional Information\nIf you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https://hackerone.com/snowflake?type=team).",
            "url": "https://vulners.com/osv/OSV:GHSA-5VVG-PVHP-HV2M"
        },
        {
            "id": "OSV:CVE-2024-53899",
            "score": 5.3,
            "description": "virtualenv before 20.26.6 allows command injection through the activation scripts for a virtual environment. Magic template strings are not quoted correctly when replacing. NOTE: this is not the same as CVE-2024-9287.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53899"
        },
        {
            "id": "OSV:CVE-2024-40647",
            "score": 5.3,
            "description": "sentry-sdk is the official Python SDK for Sentry.io. A bug in Sentry's Python SDK < 2.8.0 allows the environment variables to be passed to subprocesses despite the `env={}` setting. In Python's `subprocess` calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use `env` argument in `subprocess` calls. Due to the bug in Sentry SDK, with the Stdlib integration enabled (which is enabled by default), this expectation is not fulfilled, and all environment variables are being passed to subprocesses instead. The issue has been patched in pull request #3251 and is included in sentry-sdk==2.8.0. We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, you can disable all default integrations.\n",
            "url": "https://vulners.com/osv/OSV:CVE-2024-40647"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-10735",
            "score": 7.5,
            "description": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-10735"
        },
        {
            "id": "OSV:CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-38875"
        },
        {
            "id": "OSV:CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39329"
        },
        {
            "id": "OSV:CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39330"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-15523",
            "score": 7.8,
            "description": "In Python 3.6 through 3.6.10, 3.7 through 3.7.8, 3.8 through 3.8.4rc1, and 3.9 through 3.9.0b4 on Windows, a Trojan horse python3.dll might be used in cases where CPython is embedded in a native application. This occurs because python3X.dll may use an invalid search path for python3.dll loading (after Py_SetPath has been used). NOTE: this issue CANNOT occur when using python.exe from a standard (non-embedded) Python installation on Windows.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-15523"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-28861",
            "score": 7.4,
            "description": "Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-28861"
        },
        {
            "id": "OSV:CVE-2024-55655",
            "score": 2.7,
            "description": "sigstore-python is a Python tool for generating and verifying Sigstore signatures. Versions of sigstore-python newer than 2.0.0 but prior to 3.6.0 perform insufficient validation of the \"integration time\" present in \"v2\" and \"v3\" bundles during the verification flow: the \"integration time\" is verified *if* a source of signed time (such as an inclusion promise) is present, but is otherwise trusted if no source of signed time is present. This does not affect \"v1\" bundles, as the \"v1\" bundle format always requires an inclusion promise.\n\nSigstore uses signed time to support verification of signatures made against short-lived signing keys. The impact and severity of this weakness is *low*, as Sigstore contains multiple other enforcing components that prevent an attacker who modifies the integration timestamp within a bundle from impersonating a valid signature. In particular, an attacker who modifies the integration timestamp can induce a Denial of Service, but in no different manner than already possible with bundle access (e.g. modifying the signature itself such that it fails to verify). Separately, an attacker could upload a *new* entry to the transparency service, and substitute their new entry's time. However, this would still be rejected at validation time, as the new entry's (valid) signed time would be outside the validity window of the original signing certificate and would nonetheless render the attacker auditable.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-55655"
        },
        {
            "id": "OSV:CVE-2024-53908",
            "score": 9.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. Direct usage of the django.db.models.fields.json.HasKey lookup, when an Oracle database is used, is subject to SQL injection if untrusted data is used as an lhs value. (Applications that use the jsonfield.has_key lookup via __ are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53908"
        },
        {
            "id": "OSV:CVE-2024-53907",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. The strip_tags() method and striptags template filter are subject to a potential denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53907"
        },
        {
            "id": "OSV:CVE-2024-39614",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. get_supported_language_variant() was subject to a potential denial-of-service attack when used with very long strings containing specific characters.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39614"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-3426",
            "score": 5.7,
            "description": "There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-3426"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-45231",
            "score": 5.3,
            "description": "An issue was discovered in Django v5.1.1, v5.0.9, and v4.2.16. The django.contrib.auth.forms.PasswordResetForm class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-45231"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39330"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39329"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-38875"
        }
    ]
}
{
    "vendor": "apple",
    "product": "python-tk@3.13",
    "current_version": "3.13.0",
    "new_version": "3.13.1",
    "status": "pas s\u00fbr",
    "cve_current": [
        {
            "id": "OSV:CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-56374"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-56374"
        },
        {
            "id": "OSV:GHSA-5VVG-PVHP-HV2M",
            "score": 5.5,
            "description": "### Issue\nSnowflake recently learned about and remediated a set of vulnerabilities in the Snowflake Connector for Python. Under specific conditions, certain users credentials (or portions of those credentials) were logged locally by the Connector to the users own systems. The credentials were not logged by Snowflake.\n\nThese vulnerabilities affect versions up to and including 3.12.2. Snowflake fixed the issue in version 3.12.3.\n\n### Vulnerability Details\nWhen the logging level was set by the user to DEBUG, the Connector could have logged Duo passcodes (when specified via the \u201cpasscode\u201d parameter) and Azure SAS tokens. Additionally, the [SecretDetector](https://docs.snowflake.com/en/developer-guide/python-connector/python-connector-example#logging) logging formatter, if enabled, contained bugs which caused it to not fully redact JWT tokens and certain private key formats.\n\n### Solution\nSnowflake released version 3.12.3 of the Snowflake Connector for Python, which fixes these issues. We recommend users upgrade to version 3.12.3 and review their logs for any potentially sensitive information that may have been captured.\n\n### Additional Information\nIf you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https://hackerone.com/snowflake?type=team).",
            "url": "https://vulners.com/osv/OSV:GHSA-5VVG-PVHP-HV2M"
        },
        {
            "id": "OSV:CVE-2024-53899",
            "score": 5.3,
            "description": "virtualenv before 20.26.6 allows command injection through the activation scripts for a virtual environment. Magic template strings are not quoted correctly when replacing. NOTE: this is not the same as CVE-2024-9287.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53899"
        },
        {
            "id": "OSV:CVE-2024-40647",
            "score": 5.3,
            "description": "sentry-sdk is the official Python SDK for Sentry.io. A bug in Sentry's Python SDK < 2.8.0 allows the environment variables to be passed to subprocesses despite the `env={}` setting. In Python's `subprocess` calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use `env` argument in `subprocess` calls. Due to the bug in Sentry SDK, with the Stdlib integration enabled (which is enabled by default), this expectation is not fulfilled, and all environment variables are being passed to subprocesses instead. The issue has been patched in pull request #3251 and is included in sentry-sdk==2.8.0. We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, you can disable all default integrations.\n",
            "url": "https://vulners.com/osv/OSV:CVE-2024-40647"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-10735",
            "score": 7.5,
            "description": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-10735"
        },
        {
            "id": "OSV:CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-38875"
        },
        {
            "id": "OSV:CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39329"
        },
        {
            "id": "OSV:CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39330"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-15523",
            "score": 7.8,
            "description": "In Python 3.6 through 3.6.10, 3.7 through 3.7.8, 3.8 through 3.8.4rc1, and 3.9 through 3.9.0b4 on Windows, a Trojan horse python3.dll might be used in cases where CPython is embedded in a native application. This occurs because python3X.dll may use an invalid search path for python3.dll loading (after Py_SetPath has been used). NOTE: this issue CANNOT occur when using python.exe from a standard (non-embedded) Python installation on Windows.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-15523"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-28861",
            "score": 7.4,
            "description": "Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-28861"
        },
        {
            "id": "OSV:CVE-2024-55655",
            "score": 2.7,
            "description": "sigstore-python is a Python tool for generating and verifying Sigstore signatures. Versions of sigstore-python newer than 2.0.0 but prior to 3.6.0 perform insufficient validation of the \"integration time\" present in \"v2\" and \"v3\" bundles during the verification flow: the \"integration time\" is verified *if* a source of signed time (such as an inclusion promise) is present, but is otherwise trusted if no source of signed time is present. This does not affect \"v1\" bundles, as the \"v1\" bundle format always requires an inclusion promise.\n\nSigstore uses signed time to support verification of signatures made against short-lived signing keys. The impact and severity of this weakness is *low*, as Sigstore contains multiple other enforcing components that prevent an attacker who modifies the integration timestamp within a bundle from impersonating a valid signature. In particular, an attacker who modifies the integration timestamp can induce a Denial of Service, but in no different manner than already possible with bundle access (e.g. modifying the signature itself such that it fails to verify). Separately, an attacker could upload a *new* entry to the transparency service, and substitute their new entry's time. However, this would still be rejected at validation time, as the new entry's (valid) signed time would be outside the validity window of the original signing certificate and would nonetheless render the attacker auditable.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-55655"
        },
        {
            "id": "OSV:CVE-2024-53908",
            "score": 9.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. Direct usage of the django.db.models.fields.json.HasKey lookup, when an Oracle database is used, is subject to SQL injection if untrusted data is used as an lhs value. (Applications that use the jsonfield.has_key lookup via __ are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53908"
        },
        {
            "id": "OSV:CVE-2024-53907",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. The strip_tags() method and striptags template filter are subject to a potential denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53907"
        },
        {
            "id": "OSV:CVE-2024-39614",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. get_supported_language_variant() was subject to a potential denial-of-service attack when used with very long strings containing specific characters.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39614"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-3426",
            "score": 5.7,
            "description": "There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-3426"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-45231",
            "score": 5.3,
            "description": "An issue was discovered in Django v5.1.1, v5.0.9, and v4.2.16. The django.contrib.auth.forms.PasswordResetForm class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-45231"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39330"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39329"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-38875"
        }
    ],
    "cve_new": [
        {
            "id": "OSV:CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-56374"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-56374"
        },
        {
            "id": "OSV:GHSA-5VVG-PVHP-HV2M",
            "score": 5.5,
            "description": "### Issue\nSnowflake recently learned about and remediated a set of vulnerabilities in the Snowflake Connector for Python. Under specific conditions, certain users credentials (or portions of those credentials) were logged locally by the Connector to the users own systems. The credentials were not logged by Snowflake.\n\nThese vulnerabilities affect versions up to and including 3.12.2. Snowflake fixed the issue in version 3.12.3.\n\n### Vulnerability Details\nWhen the logging level was set by the user to DEBUG, the Connector could have logged Duo passcodes (when specified via the \u201cpasscode\u201d parameter) and Azure SAS tokens. Additionally, the [SecretDetector](https://docs.snowflake.com/en/developer-guide/python-connector/python-connector-example#logging) logging formatter, if enabled, contained bugs which caused it to not fully redact JWT tokens and certain private key formats.\n\n### Solution\nSnowflake released version 3.12.3 of the Snowflake Connector for Python, which fixes these issues. We recommend users upgrade to version 3.12.3 and review their logs for any potentially sensitive information that may have been captured.\n\n### Additional Information\nIf you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https://hackerone.com/snowflake?type=team).",
            "url": "https://vulners.com/osv/OSV:GHSA-5VVG-PVHP-HV2M"
        },
        {
            "id": "OSV:CVE-2024-53899",
            "score": 5.3,
            "description": "virtualenv before 20.26.6 allows command injection through the activation scripts for a virtual environment. Magic template strings are not quoted correctly when replacing. NOTE: this is not the same as CVE-2024-9287.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53899"
        },
        {
            "id": "OSV:CVE-2024-40647",
            "score": 5.3,
            "description": "sentry-sdk is the official Python SDK for Sentry.io. A bug in Sentry's Python SDK < 2.8.0 allows the environment variables to be passed to subprocesses despite the `env={}` setting. In Python's `subprocess` calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use `env` argument in `subprocess` calls. Due to the bug in Sentry SDK, with the Stdlib integration enabled (which is enabled by default), this expectation is not fulfilled, and all environment variables are being passed to subprocesses instead. The issue has been patched in pull request #3251 and is included in sentry-sdk==2.8.0. We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, you can disable all default integrations.\n",
            "url": "https://vulners.com/osv/OSV:CVE-2024-40647"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-10735",
            "score": 7.5,
            "description": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-10735"
        },
        {
            "id": "OSV:CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-38875"
        },
        {
            "id": "OSV:CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39329"
        },
        {
            "id": "OSV:CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39330"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-15523",
            "score": 7.8,
            "description": "In Python 3.6 through 3.6.10, 3.7 through 3.7.8, 3.8 through 3.8.4rc1, and 3.9 through 3.9.0b4 on Windows, a Trojan horse python3.dll might be used in cases where CPython is embedded in a native application. This occurs because python3X.dll may use an invalid search path for python3.dll loading (after Py_SetPath has been used). NOTE: this issue CANNOT occur when using python.exe from a standard (non-embedded) Python installation on Windows.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-15523"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-28861",
            "score": 7.4,
            "description": "Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-28861"
        },
        {
            "id": "OSV:CVE-2024-55655",
            "score": 2.7,
            "description": "sigstore-python is a Python tool for generating and verifying Sigstore signatures. Versions of sigstore-python newer than 2.0.0 but prior to 3.6.0 perform insufficient validation of the \"integration time\" present in \"v2\" and \"v3\" bundles during the verification flow: the \"integration time\" is verified *if* a source of signed time (such as an inclusion promise) is present, but is otherwise trusted if no source of signed time is present. This does not affect \"v1\" bundles, as the \"v1\" bundle format always requires an inclusion promise.\n\nSigstore uses signed time to support verification of signatures made against short-lived signing keys. The impact and severity of this weakness is *low*, as Sigstore contains multiple other enforcing components that prevent an attacker who modifies the integration timestamp within a bundle from impersonating a valid signature. In particular, an attacker who modifies the integration timestamp can induce a Denial of Service, but in no different manner than already possible with bundle access (e.g. modifying the signature itself such that it fails to verify). Separately, an attacker could upload a *new* entry to the transparency service, and substitute their new entry's time. However, this would still be rejected at validation time, as the new entry's (valid) signed time would be outside the validity window of the original signing certificate and would nonetheless render the attacker auditable.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-55655"
        },
        {
            "id": "OSV:CVE-2024-53908",
            "score": 9.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. Direct usage of the django.db.models.fields.json.HasKey lookup, when an Oracle database is used, is subject to SQL injection if untrusted data is used as an lhs value. (Applications that use the jsonfield.has_key lookup via __ are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53908"
        },
        {
            "id": "OSV:CVE-2024-53907",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. The strip_tags() method and striptags template filter are subject to a potential denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53907"
        },
        {
            "id": "OSV:CVE-2024-39614",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. get_supported_language_variant() was subject to a potential denial-of-service attack when used with very long strings containing specific characters.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39614"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-3426",
            "score": 5.7,
            "description": "There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-3426"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-45231",
            "score": 5.3,
            "description": "An issue was discovered in Django v5.1.1, v5.0.9, and v4.2.16. The django.contrib.auth.forms.PasswordResetForm class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-45231"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39330"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39329"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-38875"
        }
    ]
}
{
    "vendor": "apple",
    "product": "python@3.12",
    "version": "3.12.7_1",
    "cve_count": 20,
    "cve_details": [
        {
            "id": "OSV:CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-56374"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-56374"
        },
        {
            "id": "OSV:GHSA-5VVG-PVHP-HV2M",
            "score": 5.5,
            "description": "### Issue\nSnowflake recently learned about and remediated a set of vulnerabilities in the Snowflake Connector for Python. Under specific conditions, certain users credentials (or portions of those credentials) were logged locally by the Connector to the users own systems. The credentials were not logged by Snowflake.\n\nThese vulnerabilities affect versions up to and including 3.12.2. Snowflake fixed the issue in version 3.12.3.\n\n### Vulnerability Details\nWhen the logging level was set by the user to DEBUG, the Connector could have logged Duo passcodes (when specified via the \u201cpasscode\u201d parameter) and Azure SAS tokens. Additionally, the [SecretDetector](https://docs.snowflake.com/en/developer-guide/python-connector/python-connector-example#logging) logging formatter, if enabled, contained bugs which caused it to not fully redact JWT tokens and certain private key formats.\n\n### Solution\nSnowflake released version 3.12.3 of the Snowflake Connector for Python, which fixes these issues. We recommend users upgrade to version 3.12.3 and review their logs for any potentially sensitive information that may have been captured.\n\n### Additional Information\nIf you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https://hackerone.com/snowflake?type=team).",
            "url": "https://vulners.com/osv/OSV:GHSA-5VVG-PVHP-HV2M"
        },
        {
            "id": "OSV:CVE-2024-53899",
            "score": 5.3,
            "description": "virtualenv before 20.26.6 allows command injection through the activation scripts for a virtual environment. Magic template strings are not quoted correctly when replacing. NOTE: this is not the same as CVE-2024-9287.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53899"
        },
        {
            "id": "OSV:CVE-2024-40647",
            "score": 5.3,
            "description": "sentry-sdk is the official Python SDK for Sentry.io. A bug in Sentry's Python SDK < 2.8.0 allows the environment variables to be passed to subprocesses despite the `env={}` setting. In Python's `subprocess` calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use `env` argument in `subprocess` calls. Due to the bug in Sentry SDK, with the Stdlib integration enabled (which is enabled by default), this expectation is not fulfilled, and all environment variables are being passed to subprocesses instead. The issue has been patched in pull request #3251 and is included in sentry-sdk==2.8.0. We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, you can disable all default integrations.\n",
            "url": "https://vulners.com/osv/OSV:CVE-2024-40647"
        },
        {
            "id": "OSV:CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39329"
        },
        {
            "id": "OSV:CVE-2024-49750",
            "score": 5.5,
            "description": "The Snowflake Connector for Python provides an interface for developing Python applications that can connect to Snowflake and perform all standard operations. Prior to version 3.12.3, when the logging level was set by the user to DEBUG, the Connector could have logged Duo passcodes (when specified via the `passcode` parameter) and Azure SAS tokens. Additionally, the SecretDetector logging formatter, if enabled, contained bugs which caused it to not fully redact JWT tokens and certain private key formats. Snowflake released version 3.12.3 of the Snowflake Connector for Python, which fixes the issue. In addition to upgrading, users should review their logs for any potentially sensitive information that may have been captured.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-49750"
        },
        {
            "id": "OSV:PYSEC-2024-191",
            "score": 5.5,
            "description": "The Snowflake Connector for Python provides an interface for developing Python applications that can connect to Snowflake and perform all standard operations. Prior to version 3.12.3, when the logging level was set by the user to DEBUG, the Connector could have logged Duo passcodes (when specified via the `passcode` parameter) and Azure SAS tokens. Additionally, the SecretDetector logging formatter, if enabled, contained bugs which caused it to not fully redact JWT tokens and certain private key formats. Snowflake released version 3.12.3 of the Snowflake Connector for Python, which fixes the issue. In addition to upgrading, users should review their logs for any potentially sensitive information that may have been captured.",
            "url": "https://vulners.com/osv/OSV:PYSEC-2024-191"
        },
        {
            "id": "OSV:CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-38875"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-10735",
            "score": 7.5,
            "description": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-10735"
        },
        {
            "id": "OSV:CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39330"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-15523",
            "score": 7.8,
            "description": "In Python 3.6 through 3.6.10, 3.7 through 3.7.8, 3.8 through 3.8.4rc1, and 3.9 through 3.9.0b4 on Windows, a Trojan horse python3.dll might be used in cases where CPython is embedded in a native application. This occurs because python3X.dll may use an invalid search path for python3.dll loading (after Py_SetPath has been used). NOTE: this issue CANNOT occur when using python.exe from a standard (non-embedded) Python installation on Windows.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-15523"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-28861",
            "score": 7.4,
            "description": "Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-28861"
        },
        {
            "id": "OSV:CVE-2024-55655",
            "score": 2.7,
            "description": "sigstore-python is a Python tool for generating and verifying Sigstore signatures. Versions of sigstore-python newer than 2.0.0 but prior to 3.6.0 perform insufficient validation of the \"integration time\" present in \"v2\" and \"v3\" bundles during the verification flow: the \"integration time\" is verified *if* a source of signed time (such as an inclusion promise) is present, but is otherwise trusted if no source of signed time is present. This does not affect \"v1\" bundles, as the \"v1\" bundle format always requires an inclusion promise.\n\nSigstore uses signed time to support verification of signatures made against short-lived signing keys. The impact and severity of this weakness is *low*, as Sigstore contains multiple other enforcing components that prevent an attacker who modifies the integration timestamp within a bundle from impersonating a valid signature. In particular, an attacker who modifies the integration timestamp can induce a Denial of Service, but in no different manner than already possible with bundle access (e.g. modifying the signature itself such that it fails to verify). Separately, an attacker could upload a *new* entry to the transparency service, and substitute their new entry's time. However, this would still be rejected at validation time, as the new entry's (valid) signed time would be outside the validity window of the original signing certificate and would nonetheless render the attacker auditable.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-55655"
        },
        {
            "id": "OSV:CVE-2024-53908",
            "score": 9.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. Direct usage of the django.db.models.fields.json.HasKey lookup, when an Oracle database is used, is subject to SQL injection if untrusted data is used as an lhs value. (Applications that use the jsonfield.has_key lookup via __ are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53908"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-45231",
            "score": 5.3,
            "description": "An issue was discovered in Django v5.1.1, v5.0.9, and v4.2.16. The django.contrib.auth.forms.PasswordResetForm class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-45231"
        },
        {
            "id": "OSV:CVE-2024-53907",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. The strip_tags() method and striptags template filter are subject to a potential denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53907"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39329"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-41990",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.0 before 5.0.8 and 4.2 before 4.2.15. The urlize() and urlizetrunc() template filters are subject to a potential denial-of-service attack via very large inputs with a specific sequence of characters.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-41990"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-3426",
            "score": 5.7,
            "description": "There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-3426"
        }
    ]
}
{
    "vendor": "apple",
    "product": "python@3.12",
    "version": "3.12.8",
    "cve_count": 20,
    "cve_details": [
        {
            "id": "OSV:CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-56374"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-56374"
        },
        {
            "id": "OSV:GHSA-5VVG-PVHP-HV2M",
            "score": 5.5,
            "description": "### Issue\nSnowflake recently learned about and remediated a set of vulnerabilities in the Snowflake Connector for Python. Under specific conditions, certain users credentials (or portions of those credentials) were logged locally by the Connector to the users own systems. The credentials were not logged by Snowflake.\n\nThese vulnerabilities affect versions up to and including 3.12.2. Snowflake fixed the issue in version 3.12.3.\n\n### Vulnerability Details\nWhen the logging level was set by the user to DEBUG, the Connector could have logged Duo passcodes (when specified via the \u201cpasscode\u201d parameter) and Azure SAS tokens. Additionally, the [SecretDetector](https://docs.snowflake.com/en/developer-guide/python-connector/python-connector-example#logging) logging formatter, if enabled, contained bugs which caused it to not fully redact JWT tokens and certain private key formats.\n\n### Solution\nSnowflake released version 3.12.3 of the Snowflake Connector for Python, which fixes these issues. We recommend users upgrade to version 3.12.3 and review their logs for any potentially sensitive information that may have been captured.\n\n### Additional Information\nIf you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https://hackerone.com/snowflake?type=team).",
            "url": "https://vulners.com/osv/OSV:GHSA-5VVG-PVHP-HV2M"
        },
        {
            "id": "OSV:CVE-2024-53899",
            "score": 5.3,
            "description": "virtualenv before 20.26.6 allows command injection through the activation scripts for a virtual environment. Magic template strings are not quoted correctly when replacing. NOTE: this is not the same as CVE-2024-9287.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53899"
        },
        {
            "id": "OSV:CVE-2024-40647",
            "score": 5.3,
            "description": "sentry-sdk is the official Python SDK for Sentry.io. A bug in Sentry's Python SDK < 2.8.0 allows the environment variables to be passed to subprocesses despite the `env={}` setting. In Python's `subprocess` calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use `env` argument in `subprocess` calls. Due to the bug in Sentry SDK, with the Stdlib integration enabled (which is enabled by default), this expectation is not fulfilled, and all environment variables are being passed to subprocesses instead. The issue has been patched in pull request #3251 and is included in sentry-sdk==2.8.0. We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, you can disable all default integrations.\n",
            "url": "https://vulners.com/osv/OSV:CVE-2024-40647"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-10735",
            "score": 7.5,
            "description": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-10735"
        },
        {
            "id": "OSV:CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-38875"
        },
        {
            "id": "OSV:CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39329"
        },
        {
            "id": "OSV:CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39330"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-15523",
            "score": 7.8,
            "description": "In Python 3.6 through 3.6.10, 3.7 through 3.7.8, 3.8 through 3.8.4rc1, and 3.9 through 3.9.0b4 on Windows, a Trojan horse python3.dll might be used in cases where CPython is embedded in a native application. This occurs because python3X.dll may use an invalid search path for python3.dll loading (after Py_SetPath has been used). NOTE: this issue CANNOT occur when using python.exe from a standard (non-embedded) Python installation on Windows.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-15523"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-28861",
            "score": 7.4,
            "description": "Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-28861"
        },
        {
            "id": "OSV:CVE-2024-55655",
            "score": 2.7,
            "description": "sigstore-python is a Python tool for generating and verifying Sigstore signatures. Versions of sigstore-python newer than 2.0.0 but prior to 3.6.0 perform insufficient validation of the \"integration time\" present in \"v2\" and \"v3\" bundles during the verification flow: the \"integration time\" is verified *if* a source of signed time (such as an inclusion promise) is present, but is otherwise trusted if no source of signed time is present. This does not affect \"v1\" bundles, as the \"v1\" bundle format always requires an inclusion promise.\n\nSigstore uses signed time to support verification of signatures made against short-lived signing keys. The impact and severity of this weakness is *low*, as Sigstore contains multiple other enforcing components that prevent an attacker who modifies the integration timestamp within a bundle from impersonating a valid signature. In particular, an attacker who modifies the integration timestamp can induce a Denial of Service, but in no different manner than already possible with bundle access (e.g. modifying the signature itself such that it fails to verify). Separately, an attacker could upload a *new* entry to the transparency service, and substitute their new entry's time. However, this would still be rejected at validation time, as the new entry's (valid) signed time would be outside the validity window of the original signing certificate and would nonetheless render the attacker auditable.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-55655"
        },
        {
            "id": "OSV:CVE-2024-53908",
            "score": 9.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. Direct usage of the django.db.models.fields.json.HasKey lookup, when an Oracle database is used, is subject to SQL injection if untrusted data is used as an lhs value. (Applications that use the jsonfield.has_key lookup via __ are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53908"
        },
        {
            "id": "OSV:CVE-2024-53907",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. The strip_tags() method and striptags template filter are subject to a potential denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53907"
        },
        {
            "id": "OSV:CVE-2024-39614",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. get_supported_language_variant() was subject to a potential denial-of-service attack when used with very long strings containing specific characters.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39614"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-3426",
            "score": 5.7,
            "description": "There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-3426"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-45231",
            "score": 5.3,
            "description": "An issue was discovered in Django v5.1.1, v5.0.9, and v4.2.16. The django.contrib.auth.forms.PasswordResetForm class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-45231"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39330"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39329"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-38875"
        }
    ]
}
{
    "vendor": "apple",
    "product": "python@3.12",
    "current_version": "3.12.7_1",
    "new_version": "3.12.8",
    "status": "pas s\u00fbr",
    "cve_current": [
        {
            "id": "OSV:CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-56374"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-56374"
        },
        {
            "id": "OSV:GHSA-5VVG-PVHP-HV2M",
            "score": 5.5,
            "description": "### Issue\nSnowflake recently learned about and remediated a set of vulnerabilities in the Snowflake Connector for Python. Under specific conditions, certain users credentials (or portions of those credentials) were logged locally by the Connector to the users own systems. The credentials were not logged by Snowflake.\n\nThese vulnerabilities affect versions up to and including 3.12.2. Snowflake fixed the issue in version 3.12.3.\n\n### Vulnerability Details\nWhen the logging level was set by the user to DEBUG, the Connector could have logged Duo passcodes (when specified via the \u201cpasscode\u201d parameter) and Azure SAS tokens. Additionally, the [SecretDetector](https://docs.snowflake.com/en/developer-guide/python-connector/python-connector-example#logging) logging formatter, if enabled, contained bugs which caused it to not fully redact JWT tokens and certain private key formats.\n\n### Solution\nSnowflake released version 3.12.3 of the Snowflake Connector for Python, which fixes these issues. We recommend users upgrade to version 3.12.3 and review their logs for any potentially sensitive information that may have been captured.\n\n### Additional Information\nIf you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https://hackerone.com/snowflake?type=team).",
            "url": "https://vulners.com/osv/OSV:GHSA-5VVG-PVHP-HV2M"
        },
        {
            "id": "OSV:CVE-2024-53899",
            "score": 5.3,
            "description": "virtualenv before 20.26.6 allows command injection through the activation scripts for a virtual environment. Magic template strings are not quoted correctly when replacing. NOTE: this is not the same as CVE-2024-9287.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53899"
        },
        {
            "id": "OSV:CVE-2024-40647",
            "score": 5.3,
            "description": "sentry-sdk is the official Python SDK for Sentry.io. A bug in Sentry's Python SDK < 2.8.0 allows the environment variables to be passed to subprocesses despite the `env={}` setting. In Python's `subprocess` calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use `env` argument in `subprocess` calls. Due to the bug in Sentry SDK, with the Stdlib integration enabled (which is enabled by default), this expectation is not fulfilled, and all environment variables are being passed to subprocesses instead. The issue has been patched in pull request #3251 and is included in sentry-sdk==2.8.0. We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, you can disable all default integrations.\n",
            "url": "https://vulners.com/osv/OSV:CVE-2024-40647"
        },
        {
            "id": "OSV:CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39329"
        },
        {
            "id": "OSV:CVE-2024-49750",
            "score": 5.5,
            "description": "The Snowflake Connector for Python provides an interface for developing Python applications that can connect to Snowflake and perform all standard operations. Prior to version 3.12.3, when the logging level was set by the user to DEBUG, the Connector could have logged Duo passcodes (when specified via the `passcode` parameter) and Azure SAS tokens. Additionally, the SecretDetector logging formatter, if enabled, contained bugs which caused it to not fully redact JWT tokens and certain private key formats. Snowflake released version 3.12.3 of the Snowflake Connector for Python, which fixes the issue. In addition to upgrading, users should review their logs for any potentially sensitive information that may have been captured.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-49750"
        },
        {
            "id": "OSV:PYSEC-2024-191",
            "score": 5.5,
            "description": "The Snowflake Connector for Python provides an interface for developing Python applications that can connect to Snowflake and perform all standard operations. Prior to version 3.12.3, when the logging level was set by the user to DEBUG, the Connector could have logged Duo passcodes (when specified via the `passcode` parameter) and Azure SAS tokens. Additionally, the SecretDetector logging formatter, if enabled, contained bugs which caused it to not fully redact JWT tokens and certain private key formats. Snowflake released version 3.12.3 of the Snowflake Connector for Python, which fixes the issue. In addition to upgrading, users should review their logs for any potentially sensitive information that may have been captured.",
            "url": "https://vulners.com/osv/OSV:PYSEC-2024-191"
        },
        {
            "id": "OSV:CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-38875"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-10735",
            "score": 7.5,
            "description": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-10735"
        },
        {
            "id": "OSV:CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39330"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-15523",
            "score": 7.8,
            "description": "In Python 3.6 through 3.6.10, 3.7 through 3.7.8, 3.8 through 3.8.4rc1, and 3.9 through 3.9.0b4 on Windows, a Trojan horse python3.dll might be used in cases where CPython is embedded in a native application. This occurs because python3X.dll may use an invalid search path for python3.dll loading (after Py_SetPath has been used). NOTE: this issue CANNOT occur when using python.exe from a standard (non-embedded) Python installation on Windows.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-15523"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-28861",
            "score": 7.4,
            "description": "Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-28861"
        },
        {
            "id": "OSV:CVE-2024-55655",
            "score": 2.7,
            "description": "sigstore-python is a Python tool for generating and verifying Sigstore signatures. Versions of sigstore-python newer than 2.0.0 but prior to 3.6.0 perform insufficient validation of the \"integration time\" present in \"v2\" and \"v3\" bundles during the verification flow: the \"integration time\" is verified *if* a source of signed time (such as an inclusion promise) is present, but is otherwise trusted if no source of signed time is present. This does not affect \"v1\" bundles, as the \"v1\" bundle format always requires an inclusion promise.\n\nSigstore uses signed time to support verification of signatures made against short-lived signing keys. The impact and severity of this weakness is *low*, as Sigstore contains multiple other enforcing components that prevent an attacker who modifies the integration timestamp within a bundle from impersonating a valid signature. In particular, an attacker who modifies the integration timestamp can induce a Denial of Service, but in no different manner than already possible with bundle access (e.g. modifying the signature itself such that it fails to verify). Separately, an attacker could upload a *new* entry to the transparency service, and substitute their new entry's time. However, this would still be rejected at validation time, as the new entry's (valid) signed time would be outside the validity window of the original signing certificate and would nonetheless render the attacker auditable.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-55655"
        },
        {
            "id": "OSV:CVE-2024-53908",
            "score": 9.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. Direct usage of the django.db.models.fields.json.HasKey lookup, when an Oracle database is used, is subject to SQL injection if untrusted data is used as an lhs value. (Applications that use the jsonfield.has_key lookup via __ are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53908"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-45231",
            "score": 5.3,
            "description": "An issue was discovered in Django v5.1.1, v5.0.9, and v4.2.16. The django.contrib.auth.forms.PasswordResetForm class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-45231"
        },
        {
            "id": "OSV:CVE-2024-53907",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. The strip_tags() method and striptags template filter are subject to a potential denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53907"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39329"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-41990",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.0 before 5.0.8 and 4.2 before 4.2.15. The urlize() and urlizetrunc() template filters are subject to a potential denial-of-service attack via very large inputs with a specific sequence of characters.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-41990"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-3426",
            "score": 5.7,
            "description": "There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-3426"
        }
    ],
    "cve_new": [
        {
            "id": "OSV:CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-56374"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-56374",
            "score": 5.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-56374"
        },
        {
            "id": "OSV:GHSA-5VVG-PVHP-HV2M",
            "score": 5.5,
            "description": "### Issue\nSnowflake recently learned about and remediated a set of vulnerabilities in the Snowflake Connector for Python. Under specific conditions, certain users credentials (or portions of those credentials) were logged locally by the Connector to the users own systems. The credentials were not logged by Snowflake.\n\nThese vulnerabilities affect versions up to and including 3.12.2. Snowflake fixed the issue in version 3.12.3.\n\n### Vulnerability Details\nWhen the logging level was set by the user to DEBUG, the Connector could have logged Duo passcodes (when specified via the \u201cpasscode\u201d parameter) and Azure SAS tokens. Additionally, the [SecretDetector](https://docs.snowflake.com/en/developer-guide/python-connector/python-connector-example#logging) logging formatter, if enabled, contained bugs which caused it to not fully redact JWT tokens and certain private key formats.\n\n### Solution\nSnowflake released version 3.12.3 of the Snowflake Connector for Python, which fixes these issues. We recommend users upgrade to version 3.12.3 and review their logs for any potentially sensitive information that may have been captured.\n\n### Additional Information\nIf you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https://hackerone.com/snowflake?type=team).",
            "url": "https://vulners.com/osv/OSV:GHSA-5VVG-PVHP-HV2M"
        },
        {
            "id": "OSV:CVE-2024-53899",
            "score": 5.3,
            "description": "virtualenv before 20.26.6 allows command injection through the activation scripts for a virtual environment. Magic template strings are not quoted correctly when replacing. NOTE: this is not the same as CVE-2024-9287.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53899"
        },
        {
            "id": "OSV:CVE-2024-40647",
            "score": 5.3,
            "description": "sentry-sdk is the official Python SDK for Sentry.io. A bug in Sentry's Python SDK < 2.8.0 allows the environment variables to be passed to subprocesses despite the `env={}` setting. In Python's `subprocess` calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use `env` argument in `subprocess` calls. Due to the bug in Sentry SDK, with the Stdlib integration enabled (which is enabled by default), this expectation is not fulfilled, and all environment variables are being passed to subprocesses instead. The issue has been patched in pull request #3251 and is included in sentry-sdk==2.8.0. We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, you can disable all default integrations.\n",
            "url": "https://vulners.com/osv/OSV:CVE-2024-40647"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-10735",
            "score": 7.5,
            "description": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-10735"
        },
        {
            "id": "OSV:CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-38875"
        },
        {
            "id": "OSV:CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39329"
        },
        {
            "id": "OSV:CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39330"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2020-15523",
            "score": 7.8,
            "description": "In Python 3.6 through 3.6.10, 3.7 through 3.7.8, 3.8 through 3.8.4rc1, and 3.9 through 3.9.0b4 on Windows, a Trojan horse python3.dll might be used in cases where CPython is embedded in a native application. This occurs because python3X.dll may use an invalid search path for python3.dll loading (after Py_SetPath has been used). NOTE: this issue CANNOT occur when using python.exe from a standard (non-embedded) Python installation on Windows.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2020-15523"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-28861",
            "score": 7.4,
            "description": "Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-28861"
        },
        {
            "id": "OSV:CVE-2024-55655",
            "score": 2.7,
            "description": "sigstore-python is a Python tool for generating and verifying Sigstore signatures. Versions of sigstore-python newer than 2.0.0 but prior to 3.6.0 perform insufficient validation of the \"integration time\" present in \"v2\" and \"v3\" bundles during the verification flow: the \"integration time\" is verified *if* a source of signed time (such as an inclusion promise) is present, but is otherwise trusted if no source of signed time is present. This does not affect \"v1\" bundles, as the \"v1\" bundle format always requires an inclusion promise.\n\nSigstore uses signed time to support verification of signatures made against short-lived signing keys. The impact and severity of this weakness is *low*, as Sigstore contains multiple other enforcing components that prevent an attacker who modifies the integration timestamp within a bundle from impersonating a valid signature. In particular, an attacker who modifies the integration timestamp can induce a Denial of Service, but in no different manner than already possible with bundle access (e.g. modifying the signature itself such that it fails to verify). Separately, an attacker could upload a *new* entry to the transparency service, and substitute their new entry's time. However, this would still be rejected at validation time, as the new entry's (valid) signed time would be outside the validity window of the original signing certificate and would nonetheless render the attacker auditable.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-55655"
        },
        {
            "id": "OSV:CVE-2024-53908",
            "score": 9.8,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. Direct usage of the django.db.models.fields.json.HasKey lookup, when an Oracle database is used, is subject to SQL injection if untrusted data is used as an lhs value. (Applications that use the jsonfield.has_key lookup via __ are unaffected.)",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53908"
        },
        {
            "id": "OSV:CVE-2024-53907",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. The strip_tags() method and striptags template filter are subject to a potential denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-53907"
        },
        {
            "id": "OSV:CVE-2024-39614",
            "score": 7.5,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. get_supported_language_variant() was subject to a potential denial-of-service attack when used with very long strings containing specific characters.",
            "url": "https://vulners.com/osv/OSV:CVE-2024-39614"
        },
        {
            "id": "OSV:BIT-PYTHON-MIN-2021-3426",
            "score": 5.7,
            "description": "There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7.",
            "url": "https://vulners.com/osv/OSV:BIT-PYTHON-MIN-2021-3426"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-45231",
            "score": 5.3,
            "description": "An issue was discovered in Django v5.1.1, v5.0.9, and v4.2.16. The django.contrib.auth.forms.PasswordResetForm class, when used in a view implementing password reset flows, allows remote attackers to enumerate user e-mail addresses by sending password reset requests and observing the outcome (only when e-mail sending is consistently failing).",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-45231"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39330",
            "score": 4.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. Derived classes of the django.core.files.storage.Storage base class, when they override generate_filename() without replicating the file-path validations from the parent class, potentially allow directory traversal via certain inputs during a save() call. (Built-in Storage sub-classes are unaffected.)",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39330"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-39329",
            "score": 5.3,
            "description": "An issue was discovered in Django 5.0 before 5.0.7 and 4.2 before 4.2.14. The django.contrib.auth.backends.ModelBackend.authenticate() method allows remote attackers to enumerate users via a timing attack involving login requests for users with an unusable password.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-39329"
        },
        {
            "id": "OSV:UBUNTU-CVE-2024-38875",
            "score": 7.5,
            "description": "An issue was discovered in Django 4.2 before 4.2.14 and 5.0 before 5.0.7. urlize and urlizetrunc were subject to a potential denial of service attack via certain inputs with a very large number of brackets.",
            "url": "https://vulners.com/osv/OSV:UBUNTU-CVE-2024-38875"
        }
    ]
}
{
    "vendor": "apple",
    "product": "tcl-tk",
    "version": "8.6.15",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "tcl-tk",
    "version": "9.0.1",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "tcl-tk",
    "current_version": "8.6.15",
    "new_version": "9.0.1",
    "status": "pas s\u00fbr",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "wget",
    "version": "1.24.5",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "wget",
    "version": "1.25.0",
    "cve_count": 0,
    "cve_details": []
}
{
    "vendor": "apple",
    "product": "wget",
    "current_version": "1.24.5",
    "new_version": "1.25.0",
    "status": "pas s\u00fbr",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "c-ares",
    "current_version": "1.34.2",
    "new_version": "1.34.4",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "icu4c@75",
    "current_version": "75.1",
    "new_version": "75.1_1",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "libnghttp2",
    "current_version": "1.63.0",
    "new_version": "1.64.0",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "libpq",
    "current_version": "16.4",
    "new_version": "17.2",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "libuv",
    "current_version": "1.49.2",
    "new_version": "1.50.0",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "mysql",
    "current_version": "9.0.1_4",
    "new_version": "9.2.0",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "node",
    "current_version": "22.10.0",
    "new_version": "23.6.1",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "oniguruma",
    "current_version": "6.9.9",
    "new_version": "6.9.10",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "postgresql@15",
    "current_version": "15.8_2",
    "new_version": "15.10",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "python-tk@3.13",
    "current_version": "3.13.0",
    "new_version": "3.13.1",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "python@3.12",
    "current_version": "3.12.7_1",
    "new_version": "3.12.8",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "tcl-tk",
    "current_version": "8.6.15",
    "new_version": "9.0.1",
    "cve_current": [],
    "cve_new": []
}
{
    "vendor": "apple",
    "product": "wget",
    "current_version": "1.24.5",
    "new_version": "1.25.0",
    "cve_current": [],
    "cve_new": []
}
